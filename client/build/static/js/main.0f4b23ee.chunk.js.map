{"version":3,"sources":["components/TokenPiece.js","components/Square.js","components/Board.js","components/MoveArrows.js","components/PlayAgain.js","components/FlipBoard.js","components/Dashboard.js","Utils/CalculateLegalMoves.js","Utils/CalculateGameStatus.js","components/GameEndModal.js","Utils/OriginalBoard.js","components/Footer.js","components/About.js","images/checkers_piece_icon.PNG","components/TopNav.js","components/Preferences.js","components/Rules.js","App.js","index.js"],"names":["TokenPiece","className","id","pieceColor","setBoard","pieceIsKing","styleInfo","shape","boardStyle","draggable","onDragStart","event","dataTransfer","setData","drag","width","height","viewBox","d","Square","color","number","populated","squareColor","textColor","onDragOver","e","preventDefault","onDrop","target","replace","getData","drop","onClick","console","log","style","backgroundColor","Board","boardState","flipboard","map","num","index","hasPiece","rowNum","Math","floor","MoveArrows","viewHistory","aria-hidden","focusable","data-prefix","role","fill","PlayAgain","gameOver","resetGame","FlipBoard","rotateBoard","Dashboard","player","CalculateLegalMoves","goalSquare","startSquare","board","playerOne","valid","jump","jumpedSquare","multiJump","multiJumpOptions","isKing","baseMoveLeft","baseMoveRight","jumpLeft","jumpRight","corners","singleJumpOption","resObject","options","calcSingleJumpOptions","start","baseMove","jumpMove","multi","includes","push","indexOf","CalculateGameStatus","playerOneTurn","winner","forEach","square","moveLeft","moveRight","moveBackLeft","moveBackRight","moveLeftAndRight","GameEndModal","display","document","getElementsByClassName","visibility","originalBoard","Footer","Date","getFullYear","rel","href","About","TopNav","Navbar","bg","expand","Brand","exact","to","src","logo","alt","Toggle","aria-controls","Collapse","Row","Nav","defaultActiveKey","Col","md","Item","Link","Preferences","changeShape","changeBoardstyle","onChange","querySelector","value","defaultChecked","type","name","htmlFor","Rules","App","useState","firstPlayersTurn","setFirstPlayersTurn","historyIndex","history","setHistory","currentHistoryIndex","setCurrentHistoryIndex","allowedMultiJumps","setAllowedMultiJumps","setGameOver","pieceShape","setPieceShape","boardstyle","setBoardstyle","flipBoard","setFlipBoard","attemptMove","origin","playerOnesPiece","parseInt","length","res","newBoard","item","gameStatusCheck","traverseHistory","direction","changeBoardStyle","path","render","props","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f4b23ee.chunk.js","sourcesContent":["const TokenPiece = ({id, setBoard, pieceColor, pieceIsKing, styleInfo}) => {\r\n    const drag = (event)=>{\r\n         event.dataTransfer.setData(\"text\", id);\r\n         event.dataTransfer.setData(\"color\", pieceColor);\r\n    }\r\n    let className;\r\n    if(pieceColor === 'black') className = 'p1';\r\n    if(pieceColor === 'red') className = 'p2';\r\n    if(pieceIsKing) className += ' king';\r\n    if(styleInfo.shape === 'circle') className += ' piece-circle';\r\n    else if(styleInfo.shape === 'square') className += ' piece-square';\r\n\r\n    className += ' ' + styleInfo.boardStyle;\r\n  return (\r\n    <div className={`piece ${className}`} id={id} draggable=\"true\" onDragStart={(event) => drag(event)} >\r\n    {pieceIsKing && (<svg className='king-icon' width=\"184.099px\" height=\"184.099px\" viewBox=\"0 0 184.099 184.099\">\r\n        <path d=\"M182.23,54.814c-1.675-1.258-3.982-1.245-5.633,0.027l-48.457,36.991L96.337,19.979c-1.504-3.386-7.055-3.386-8.564,0\r\n            l-32.175,72.68L7.563,54.878c-1.659-1.297-3.979-1.333-5.669-0.088c-1.696,1.254-2.338,3.492-1.577,5.443l33.372,86.229\r\n            c0.691,1.803,2.43,2.984,4.357,2.984h108.009c1.942,0,3.666-1.176,4.36-2.984l33.368-86.229\r\n            C184.538,58.282,183.905,56.068,182.23,54.814z M142.852,140.099h-101.6L15.193,72.774l39.357,30.948\r\n            c1.13,0.895,2.606,1.218,4.022,0.853c1.404-0.342,2.564-1.315,3.151-2.643l30.333-68.516l29.928,67.626\r\n            c0.591,1.304,1.729,2.277,3.118,2.631c1.388,0.365,2.861,0.061,4.006-0.816l39.981-30.521L142.852,140.099z M150.244,161.983\r\n            c0,2.582-2.095,4.677-4.677,4.677H38.526c-2.582,0-4.676-2.095-4.676-4.677s2.095-4.677,4.676-4.677h107.041\r\n            C148.155,157.307,150.244,159.401,150.244,161.983z\"/>\r\n      </svg>)}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TokenPiece\r\n","import Token from './TokenPiece';\r\nconst Square = ({color, number, populated, setBoard, pieceColor, pieceIsKing, styleInfo}) => {\r\n    function drop(event){\r\n        setBoard(event.target.id.replace('square', ''), event.dataTransfer.getData('text'),event.dataTransfer.getData('color') );\r\n    }\r\n    const allowDrop=(event)=>{\r\n        if(color === 'black'){\r\n        event.preventDefault();\r\n        \r\n        }\r\n    }\r\n    let squareColor = color ==='black' ? '#954535': '#d2a56d' ;\r\n    let textColor = color === 'black' ? 'white' : 'black';\r\n    if(styleInfo.boardStyle === 'bw') squareColor = textColor;\r\n    if(styleInfo.boardStyle === 'green') squareColor = color=== 'black' ? '#32612D' : '#5ca08e'; \r\n    \r\n    return (\r\n        <div id={'square' + number} draggable='false' onDragOver={(e)=>allowDrop(e)} onDrop={(event)=>drop(event)} className = 'square' onClick = {()=>{console.log(populated)}} style={{backgroundColor: squareColor, color: textColor }} >\r\n            {populated ? <Token styleInfo = {styleInfo} pieceIsKing ={pieceIsKing}  pieceColor = {pieceColor} id={number} setBoard = {setBoard}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import Square from './Square';\r\nconst Board = ({boardState, setBoard, styleInfo}) => {\r\n    return (<div className = {`board ${styleInfo.flipboard ? 'rotated' : ''}`}>\r\n                {boardState.map((num, index)=><Square number={num.number} pieceColor = {num.pieceColor} pieceIsKing = {num.pieceIsKing} setBoard = {setBoard} color={num.color} populated = {num.hasPiece} rowNum = { Math.floor(num.number / 8)} styleInfo={styleInfo} key={index} />)}\r\n        </div>\r\n    )\r\n}\r\nexport default Board\r\n","const MoveArrows = ({viewHistory}) => {\r\n    return (\r\n        <span className='move-arrows grid-item'>\r\n            <span onClick={() => viewHistory('beginning')} className='double-arrow-left' ><svg className=\"double-arrow\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" role=\"img\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M34.5 239L228.9 44.7c9.4-9.4 24.6-9.4 33.9 0l22.7 22.7c9.4 9.4 9.4 24.5 0 33.9L131.5 256l154 154.7c9.3 9.4 9.3 24.5 0 33.9l-22.7 22.7c-9.4 9.4-24.6 9.4-33.9 0L34.5 273c-9.3-9.4-9.3-24.6 0-34zm192 34l194.3 194.3c9.4 9.4 24.6 9.4 33.9 0l22.7-22.7c9.4-9.4 9.4-24.5 0-33.9L323.5 256l154-154.7c9.3-9.4 9.3-24.5 0-33.9l-22.7-22.7c-9.4-9.4-24.6-9.4-33.9 0L226.5 239c-9.3 9.4-9.3 24.6 0 34z\"></path></svg></span>\r\n            <span onClick={() => viewHistory('left')} className='chevron left'></span>\r\n            <span onClick={() => viewHistory('right')} className='chevron right'></span>\r\n            <span onClick={() => viewHistory('present')} className='double-arrow-right' ><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" viewBox=\"0 0 512 512\" className=\"double-arrow\"><path fill=\"currentColor\" d=\"M477.5 273L283.1 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.7-22.7c-9.4-9.4-9.4-24.5 0-33.9l154-154.7-154-154.7c-9.3-9.4-9.3-24.5 0-33.9l22.7-22.7c9.4-9.4 24.6-9.4 33.9 0L477.5 239c9.3 9.4 9.3 24.6 0 34zm-192-34L91.1 44.7c-9.4-9.4-24.6-9.4-33.9 0L34.5 67.4c-9.4 9.4-9.4 24.5 0 33.9l154 154.7-154 154.7c-9.3 9.4-9.3 24.5 0 33.9l22.7 22.7c9.4 9.4 24.6 9.4 33.9 0L285.5 273c9.3-9.4 9.3-24.6 0-34z\" ></path></svg></span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default MoveArrows\r\n","const PlayAgain = ({gameOver, resetGame}) => {\r\n    return (\r\n        <button onClick = {resetGame} className = 'play-again' >\r\n            {gameOver ? `Play Again` : `Restart Game`}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PlayAgain\r\n","const FlipBoard = ({rotateBoard}) => {\r\n    return (\r\n        <span className = 'board-flip'>\r\n            flip board &nbsp; &nbsp;\r\n            <svg onClick = {rotateBoard} className = 'board-flip-svg'\r\n\t viewBox=\"0 0 489.645 489.645\">\r\n\t<path d=\"M460.656,132.911c-58.7-122.1-212.2-166.5-331.8-104.1c-9.4,5.2-13.5,16.6-8.3,27c5.2,9.4,16.6,13.5,27,8.3\r\n\t\tc99.9-52,227.4-14.9,276.7,86.3c65.4,134.3-19,236.7-87.4,274.6c-93.1,51.7-211.2,17.4-267.6-70.7l69.3,14.5\r\n\t\tc10.4,2.1,21.8-4.2,23.9-15.6c2.1-10.4-4.2-21.8-15.6-23.9l-122.8-25c-20.6-2-25,16.6-23.9,22.9l15.6,123.8\r\n\t\tc1,10.4,9.4,17.7,19.8,17.7c12.8,0,20.8-12.5,19.8-23.9l-6-50.5c57.4,70.8,170.3,131.2,307.4,68.2\r\n\t\tC414.856,432.511,548.256,314.811,460.656,132.911z\"/>\r\n</svg>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default FlipBoard\r\n","import MoveArrows from './MoveArrows'; \r\nimport PlayAgain from './PlayAgain';\r\nimport FlipBoard from './FlipBoard';\r\nconst Dashboard = ({player, viewHistory, gameOver, resetGame, styleInfo, rotateBoard}) => {\r\n    return (\r\n        <div className = 'dashboard'  >\r\n           <span className = 'player-info grid-item'>{gameOver ? `Game over! ` : player ? `Player one's turn` : `Player two's turn`} <span className ={player ? 'p1 ex ' + styleInfo.shape +' ' + styleInfo.boardStyle : 'p2 ex '+ styleInfo.shape +' ' + styleInfo.boardStyle} ></span></span> \r\n           <MoveArrows viewHistory = {viewHistory} />\r\n           <PlayAgain resetGame = {resetGame} gameOver = {gameOver}/>\r\n           <FlipBoard rotateBoard = {rotateBoard}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","const CalculateLegalMoves = (goalSquare, startSquare, board, playerOne) => {\r\n    if( ! board[startSquare] )return  { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions:[], isKing:false };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    let edges  = [1,3,5,7,56,58,60,62];\r\n    let singleJumpOption = [];\r\n    let jumpedSquare = [];\r\n    let resObject = { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions:[], isKing: board[startSquare].pieceIsKing };\r\n    let baseMoveLeft, baseMoveRight, jumpLeft, jumpRight;\r\n    let options = [];\r\n    if (playerOne) {\r\n        baseMoveLeft = -9\r\n        baseMoveRight = -7;\r\n        jumpLeft = -18;\r\n        jumpRight = -14;\r\n    } else {\r\n        baseMoveLeft = 7;\r\n        baseMoveRight = 9;\r\n        jumpLeft = 14;\r\n        jumpRight = 18;\r\n    }\r\n    const calcSingleJumpOptions = (start, baseMove, jumpMove, player, multi = false)=>{\r\n        if(!corners.includes(start+baseMove) && start+ baseMove >= 0 && start + baseMove < 64 && board[start+baseMove].hasPiece && ((player && board[start+baseMove].pieceColor === 'red') || (!player && board[start + baseMove].pieceColor ==='black')) && ! board[start + jumpMove].hasPiece ){\r\n           if(! multi){ singleJumpOption.push(start + jumpMove);\r\n            jumpedSquare.push(start + baseMove);\r\n           }else{\r\n               resObject.multiJump = true;\r\n               resObject.multiJumpOptions.push(start + jumpMove);\r\n           }\r\n        }\r\n    }\r\n    if(startSquare % 8 !== 7) options.push(startSquare + baseMoveRight);\r\n    if(startSquare % 8 !== 0) options.push(startSquare + baseMoveLeft);\r\n    if(resObject.isKing && startSquare % 8 !== 7) options.push(startSquare - baseMoveLeft);\r\n    if(resObject.isKing && startSquare % 8 !== 0) options.push(startSquare - baseMoveRight);\r\n    //jump logic\r\ncalcSingleJumpOptions(startSquare, baseMoveLeft, jumpLeft, playerOne);\r\ncalcSingleJumpOptions(startSquare, baseMoveRight, jumpRight, playerOne);\r\nif(resObject.isKing){\r\n    calcSingleJumpOptions(startSquare, -baseMoveRight, -jumpRight, playerOne);\r\n    calcSingleJumpOptions(startSquare, -baseMoveLeft, -jumpLeft, playerOne);\r\n}\r\n    if (options.includes(goalSquare)) {\r\n        resObject.valid = true;     \r\n    }else if(singleJumpOption.includes(goalSquare)){\r\n        resObject.valid = true;\r\n        resObject.jumpedSquare = jumpedSquare[singleJumpOption.indexOf(goalSquare)];\r\n        resObject.jump = true;\r\n        //calculating multijumps\r\n        if(goalSquare % 8 !==  0){\r\n            calcSingleJumpOptions(goalSquare, baseMoveLeft, jumpLeft, playerOne, true );\r\n        }\r\n        if(goalSquare % 8 !== 7){\r\n            calcSingleJumpOptions(goalSquare, baseMoveRight, jumpRight, playerOne, true );\r\n        }\r\n        if(resObject.isKing && goalSquare % 8!== 0){\r\n            calcSingleJumpOptions(goalSquare, - baseMoveRight, -jumpRight, playerOne, true);\r\n        }\r\n        if(resObject.isKing && goalSquare % 8 !== 7){\r\n            calcSingleJumpOptions(goalSquare, -baseMoveLeft, -jumpLeft, playerOne, true);\r\n        }\r\n\r\n    }\r\n    if(resObject.valid && edges.includes(goalSquare) && ((playerOne && goalSquare % 2 === 1 || (!playerOne && goalSquare % 2 === 0)))) resObject.isKing = true;\r\n    \r\n    return resObject;\r\n}\r\n\r\nexport default CalculateLegalMoves\r\n","const CalculateGameStatus = (boardState, playerOneTurn) => {\r\n    const resObject = { gameOver: true, winner: playerOneTurn ? 'two':'one'   };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    const moveLeftAndRight = (square) => {\r\n        let num = square.number;\r\n        let moveLeft = -9;\r\n        let moveRight = -7;\r\n        let moveBackLeft = 7;\r\n        let moveBackRight = -9;\r\n        if (!playerOneTurn) {\r\n            moveLeft = 7\r\n            moveRight = 9;\r\n            moveBackRight = -7\r\n            moveBackLeft = -9\r\n        }\r\n        //try moving left and right, no jump\r\n        if (num % 8 !== 0 && num + moveLeft >= 0 && num + moveLeft <= 64 && boardState[num + moveLeft].hasPiece === false) return true;\r\n        if (num % 8 !== 7 && num + moveRight >= 0 && num + moveRight <= 64 && boardState[num + moveRight].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 0 && num + moveBackLeft >= 0 && num + moveBackLeft <= 64 && boardState[num + moveBackLeft].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 7 && num + moveBackRight >= 0 && num + moveBackRight <= 64 && boardState[num + moveBackRight].hasPiece === false) return true;\r\n        //try moving left and right via jumping. Ugly, but can clean up later into a code that just takes in parameters of move directions & player\r\n        if (num % 8 !== 0 && num + (moveLeft * 2) >= 0 && num + (moveLeft * 2) <= 64 && ! corners.includes(num+moveLeft) && boardState[num + moveLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveLeft].pieceColor === 'black')) && boardState[num + (moveLeft * 2 )].hasPiece === false ) return true;\r\n        if (num % 8 !== 7 && num + (moveRight * 2) >= 0 && num + (moveRight * 2) <= 64 && ! corners.includes(num+moveRight) && boardState[num + moveRight].hasPiece === true && ((playerOneTurn && boardState[num + moveRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveRight].pieceColor === 'black')) && boardState[num + (moveRight * 2 )].hasPiece === false ) return true;\r\n        if (square.pieceIsKing && num % 8 !== 7 && num + (moveBackRight * 2) >= 0 && num + (moveBackRight * 2) <= 64 && ! corners.includes(num+moveBackRight) && boardState[num + moveBackRight].hasPiece === true && ((playerOneTurn && boardState[num + moveBackRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackRight].pieceColor === 'black')) && boardState[num + (moveBackRight * 2 )].hasPiece === false ) return true;\r\n        if (square.pieceIsKing && num % 8 !== 0 && num + (moveBackLeft * 2) >= 0 && num + (moveBackLeft * 2) <= 64 && ! corners.includes(num+moveBackLeft) && boardState[num + moveBackLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'black')) && boardState[num + (moveBackLeft * 2 )].hasPiece === false ) return true;  \r\n    }\r\n    boardState.forEach(square => {\r\n        if (square.hasPiece && ((playerOneTurn && square.pieceColor === 'black') || (!playerOneTurn && square.pieceColor === 'red'))) {\r\n            let canMove = moveLeftAndRight(square);\r\n            if (canMove) {\r\n                resObject.gameOver = false;\r\n                return resObject\r\n            }\r\n\r\n        }\r\n    });\r\n    return resObject;\r\n}\r\nexport default CalculateGameStatus\r\n","import PlayAgain from './PlayAgain';\r\nconst GameEndModal = ({gameOver, resetGame}) => {\r\n    const close = ()=>{\r\n        let hideModal = document.getElementsByClassName('end-modal')[0];\r\n        hideModal.style.visibility = 'hidden';\r\n    }\r\n\r\n    let display = gameOver.gameOver ? 'flex' : 'none';\r\n    return (\r\n        <div className = 'end-modal' style={{display: display}}>\r\n            <span onClick = {close} className = 'close-modal'>X</span>\r\n           <p>Player {gameOver.winner} has won!</p>\r\n           <PlayAgain resetGame={resetGame} gameOver = {gameOver.gameOver}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameEndModal\r\n","const originalBoard = [{ number: 0, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 1, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 2, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 3, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 4, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 5, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 6, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 7, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 8, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 9, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 10, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 11, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 12, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 13, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 14, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 15, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 16, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 17, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 18, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 19, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 20, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 21, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 22, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 23, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 24, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 25, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 26, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 27, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 28, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 29, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 30, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 31, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 32, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 33, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 34, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 35, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 36, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 37, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 38, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 39, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 40, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 41, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 42, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 43, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 44, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 45, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 46, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 47, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 48, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 49, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 50, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 51, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 52, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 53, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 54, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 55, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 56, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 57, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 58, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 59, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 60, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 61, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 62, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 63, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false }];\r\nexport default originalBoard\r\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p> &copy; {new Date().getFullYear()}, <a target = '_blank' rel='noreferrer'  href='https://mattdwinell.github.io'>Matthew Dwinell</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","const About = () => {\r\n    return (\r\n        <div className = 'about'>\r\n            <p> &nbsp;&nbsp;&nbsp;&nbsp;I hope this version of checkers amused you— there are a lot of checkers apps out there, and I wanted to put my own spin on the ruleset. When I was a kid, I was told that you didn’t have to jump a piece if you didn’t want to, but if you did a single-jump, you were obligated to double (or triple) jump if it was possible. Sure, it <strong>might</strong> have been a forgiving way to play, but it also allows an opponent to set up traps where a king has to double jump and be subsequently taken. Happy playing!</p>\r\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;This checkers app was created as a solo project by me, Matthew Dwinell. It was built in react using functional components, browser router, and a good chunk of spare time. For more information about projects I’ve worked on, feel free to check out my <a href='https://mattdwinell.github.io' rel='noreferrer' target='_blank'>web portfolio</a>.</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","export default __webpack_public_path__ + \"static/media/checkers_piece_icon.4d65ed96.PNG\";","import {Navbar, Nav,Col , Row} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from './../images/checkers_piece_icon.PNG';\r\nconst TopNav = () => {\r\n    return (\r\n<Navbar  bg=\"light\" expand=\"sm\" className = 'style-nav-bar' >\r\n\r\n  <Navbar.Brand> \r\n      <Link exact to='/'><div className = 'logo-holder'> <img src = {logo} alt='checkers logo'/></div></Link>\r\n       </Navbar.Brand>\r\n\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Row>\r\n    <Nav defaultActiveKey = '/' className=\"mr-auto\">\r\n      <Col md={4}><Nav.Item>\r\n      <Nav.Link ><Link className='top-nav-link' exact to='/' >Home</Link> </Nav.Link>           \r\n       </Nav.Item>\r\n       </Col> \r\n       <Col md={4}><Nav.Item>\r\n      <Nav.Link ><Link className='top-nav-link' exact to='/rules' >Rules</Link> </Nav.Link>           \r\n       </Nav.Item>\r\n       </Col>\r\n       <Col md={4}>\r\n       <Nav.Item>\r\n      <Nav.Link><Link className='top-nav-link' to='/about'>About</Link></Nav.Link>           \r\n       </Nav.Item>\r\n       </Col>\r\n       <Col md={4}>\r\n       <Nav.Item>\r\n        <Nav.Link><Link className='top-nav-link' to='/preferences'>Preferences</Link></Nav.Link>   \r\n       </Nav.Item>\r\n       </Col>\r\n    </Nav>\r\n      </Row>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}\r\n\r\nexport default TopNav\r\n","const Preferences = ({changeShape, style, changeBoardstyle}) => {\r\n    return (\r\n        <div className = 'preferences-page'>\r\n           <h4>Customize Board</h4>\r\n\r\n        <div className='radio-control'>\r\n          Piece shape\r\n            <div>\r\n                <input onChange = {()=>changeShape(document.querySelector('input[name=\"shape\"]:checked').value)} defaultChecked={style.shape === 'circle'} type='radio' value ='circle' name='shape' />\r\n                <label htmlFor='circle'> &nbsp;Round</label>\r\n            </div>\r\n            <div>\r\n                <input onChange = {()=>changeShape(document.querySelector('input[name=\"shape\"]:checked').value)} defaultChecked={style.shape === 'square'} name='shape' value='square' type='radio'  />\r\n                <label htmlFor='square'> &nbsp;Square</label>\r\n            </div>\r\n        </div>\r\n        <div className='radio-control'>\r\n          Board Color\r\n            <div>\r\n                <input onChange = {()=>changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)} defaultChecked={style.boardStyle === 'brown'}  type='radio' value ='brown' name='boardstyle' />\r\n                <label htmlFor='circle'> &nbsp;Brown and Tan</label>\r\n            </div>\r\n            <div>\r\n                <input onChange = {()=>changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)}  name='boardstyle' value='bw' type='radio' defaultChecked={style.boardStyle === 'bw'}   />\r\n                <label htmlFor='square'> &nbsp;Black and White</label>\r\n            </div>\r\n            <div>\r\n                <input onChange = {()=>changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)}  name='boardstyle' value='green' type='radio' defaultChecked={style.boardStyle === 'green'}   />\r\n                <label htmlFor='square'> &nbsp;Shades of Green</label>\r\n            </div>\r\n        </div>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preferences\r\n","const Rules = () => {\r\n    return (\r\n        <div className = 'rules'>\r\n            <h5>General rules</h5>\r\n            <p>Your goal is to remove all of the opponent's pieces by capturing them or forcing them into a position where they cannot move.</p>\r\n            <p>Any piece can move diagonally forward, only kings can move diagonally backwards.</p>\r\n            <p>A simple checkers move would be moving your piece diagonally forward one square.</p>\r\n            <p>Jumping requires that the nearest diagonal square be occupied by the opponent's piece, and that subsequent square after that piece is unoccupied.</p>\r\n            <p>When you jump you capture the opponent's piece, removing it from the board.</p>\r\n            <p> For single jumps, jumping is not required.</p>\r\n            <p> If one of your pieces reaches the back-rank of the other side of the board, it becomes a king and can move backwards as well as forwards.</p>\r\n            <h5>House rule</h5>\r\n                <p>While single jumps are not mandatory, if you jump and have the option to double jump, you must take it.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import './App.css';\nimport Board from './components/Board'\nimport { useState } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport CalculateLegalMoves from './Utils/CalculateLegalMoves';\nimport CalculateGameStatus from './Utils/CalculateGameStatus';\nimport GameEndModal from './components/GameEndModal';\nimport originalBoard from './Utils/OriginalBoard';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport TopNav from './components/TopNav';\nimport Preferences from './components/Preferences';\nimport Rules from './components/Rules';\n\nfunction App() {\n  const [firstPlayersTurn, setFirstPlayersTurn] = useState(true);\n  const [board, setBoard] = useState(originalBoard);\n  const [history, setHistory] = useState([{ board: board, historyIndex: 0 }]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(0);\n  const [allowedMultiJumps, setAllowedMultiJumps] = useState([]);\n  const [gameOver, setGameOver] = useState({ gameOver: false, winner: null });\n  const [pieceShape, setPieceShape] = useState('circle');\n  const[boardstyle, setBoardstyle] = useState('brown');\n  const[flipBoard, setFlipBoard] = useState(false);\n  const attemptMove = (num, origin, playerOnesPiece) => {\n    num = parseInt(num, 10);\n    origin = parseInt(origin, 10);\n    if (num === origin || !num) return;\n    if ((playerOnesPiece === 'black' && firstPlayersTurn === false) || (playerOnesPiece === 'red' && firstPlayersTurn === true)) return;\n    if (board[num].hasPiece === true) return;\n    if (allowedMultiJumps.length > 0 && !allowedMultiJumps.includes(parseInt(num, 10))) return;\n    if (currentHistoryIndex !== history.length - 1 && history.length > 0) return;\n    let res = CalculateLegalMoves(parseInt(num, 10), parseInt(origin, 10), board, firstPlayersTurn);\n    if (!res.valid) return;\n    if (res.multiJump) {\n      setAllowedMultiJumps(res.multiJumpOptions);\n    } else {\n      setFirstPlayersTurn(!firstPlayersTurn);\n      setAllowedMultiJumps([]);\n    }\n    const newBoard = board.map((item, index) => index == num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index == origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump === true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item);\n    setBoard(newBoard);\n\n    setHistory([...history, { board:newBoard, historyIndex: currentHistoryIndex + 1 }]);\n    setCurrentHistoryIndex(currentHistoryIndex + 1);\n    let gameStatusCheck = CalculateGameStatus(newBoard, !firstPlayersTurn);\n    if (gameStatusCheck.gameOver === true) {\n      setGameOver(gameStatusCheck);\n    }\n\n  }\n  const traverseHistory = (direction) => {\n    if (history.length === 1) return;\n    if (direction === 'left' && currentHistoryIndex > 0) {\n      setBoard(history[currentHistoryIndex - 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n\n    }\n    if (direction === 'present') {\n      setCurrentHistoryIndex(history.length - 1);\n      setBoard(history[history.length - 1].board);\n    }\n    if (direction === 'right' && currentHistoryIndex < history.length - 1) {\n      setBoard(history[currentHistoryIndex + 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n    }\n\n    if (direction === 'beginning') {\n      setBoard(history[0].board);\n      setCurrentHistoryIndex(0);\n    }\n  }\n  const resetGame = ()=>{\n    setFirstPlayersTurn(true);\n    setBoard(originalBoard);\n    setHistory([{ board: originalBoard, historyIndex: 0 }]);\n    setCurrentHistoryIndex(0);\n    setAllowedMultiJumps([]);\n    setGameOver({ gameOver: false, winner: null });\n    let hideModal = document.getElementsByClassName('end-modal')[0];\n    hideModal.style.visibility = 'visible';\n  }\nconst changeShape = (target)=>{\n  setPieceShape(target);\n}\nconst changeBoardStyle = (target)=>{\n  setBoardstyle(target);\n}\nconst rotateBoard = ()=>{\n  setFlipBoard(!flipBoard);\n}\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <TopNav/>\n      <Route path='/' exact render={(props)=>(\n      <>\n           <Board boardState={board} setBoard={attemptMove} styleInfo = {{shape: pieceShape, boardStyle: boardstyle, flipboard: flipBoard}} />\n      <Dashboard styleInfo = {{shape: pieceShape, boardStyle: boardstyle, flipboard: flipBoard}}  resetGame = {resetGame} player={firstPlayersTurn} gameOver={gameOver.gameOver} viewHistory={traverseHistory} rotateBoard = {rotateBoard} />\n      <GameEndModal resetGame = {resetGame} gameOver={gameOver} />\n      \n      </>)}/>\n    <Route path ='/about' component = {About}/> \n    <Route path='/preferences' render = {(props)=>(\n      <Preferences changeBoardstyle = {changeBoardStyle} changeShape = {changeShape} style = {{shape: pieceShape, boardStyle: boardstyle}}/>\n    )}/>\n    <Route path='/rules' component = {Rules}></Route>\n\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}