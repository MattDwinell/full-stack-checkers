{"version":3,"sources":["components/TokenPiece.js","components/Square.js","components/Board.js","components/MoveArrows.js","components/PlayAgain.js","components/FlipBoard.js","components/Dashboard.js","Utils/CalculateLegalMoves.js","Utils/CalculateGameStatus.js","components/GameEndModal.js","Utils/OriginalBoard.js","components/Footer.js","components/About.js","images/checkers_piece_icon.PNG","auth/firebase.js","components/TopNav.js","components/Preferences.js","components/Rules.js","auth/SignIn.js","auth/SignUp.js","auth/PasswordReset.js","providers/UserProvider.js","Utils/apiCalls.js","components/NewGameDashboard.js","components/GameCreateJoinModal.js","components/UserSeekPreview.js","components/UserSeeksDashboard.js","components/HideableTextInput.js","components/OtherSeekPreview.js","components/OtherSeeksDashboard.js","components/TogglingButton.js","components/CurrentGamePreview.js","components/GamesInProgress.js","components/PastGamesPreview.js","components/PreviousGamesDashboard.js","components/MultiplayerPage.js","providers/FunctionalUserProvider.js","components/Resign.js","components/MultiplayerDashboard.js","components/MultiplayerGameEndModal.js","components/PlayMultiplayer.js","App.js","index.js"],"names":["TokenPiece","className","id","pieceColor","pieceIsKing","styleInfo","shape","boardStyle","draggable","onDragStart","event","dataTransfer","setData","drag","width","height","viewBox","d","Square","color","number","populated","setBoard","squareColor","textColor","onDragOver","e","preventDefault","onDrop","target","replace","getData","drop","onClick","console","log","style","backgroundColor","Board","boardState","flipboard","map","num","index","hasPiece","rowNum","Math","floor","MoveArrows","viewHistory","aria-hidden","focusable","data-prefix","role","fill","PlayAgain","gameOver","resetGame","FlipBoard","rotateBoard","Dashboard","player","CalculateLegalMoves","goalSquare","startSquare","board","playerOne","valid","jump","jumpedSquare","multiJump","multiJumpOptions","isKing","baseMoveLeft","baseMoveRight","jumpLeft","jumpRight","corners","singleJumpOption","resObject","options","calcSingleJumpOptions","start","baseMove","jumpMove","multi","includes","push","indexOf","CalculateGameStatus","playerOneTurn","winner","forEach","square","moveLeft","moveRight","moveBackLeft","moveBackRight","moveLeftAndRight","GameEndModal","display","document","getElementsByClassName","visibility","originalBoard","Footer","Date","getFullYear","rel","href","About","require","config","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","firestore","generateUserDocument","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","error","getUserDocument","userDocument","data","TopNav","signOutAndRedirect","window","location","host","signOut","Navbar","bg","expand","Brand","exact","to","src","logo","alt","Toggle","aria-controls","Collapse","Row","Nav","defaultActiveKey","Col","md","Item","Preferences","changeShape","changeBoardstyle","onChange","querySelector","value","defaultChecked","type","name","htmlFor","Rules","SignIn","useState","setEmail","password","setPassword","setError","onChangeHandler","currentTarget","placeholder","signInWithEmailAndPassword","catch","signInWithEmailAndPasswordHandler","SignUp","setDisplayName","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","firebaseUser","currentUser","PasswordReset","emailHasBeenSent","setEmailHasBeenSent","action","sendPasswordResetEmail","then","setTimeout","UserContext","createContext","Component","axios","url","headers","method","gameId","encodeURI","gameData","game","NewGameDashboard","makeNewGame","hideShowForm","formValidateAndSubmit","formData","FormData","playerChoice","alias","length","alert","maxLength","GameCreateJoinModal","hideShow","message","UserSeekPreview","cancel","playerOneDisplayName","playerTwoDisplayName","UserSeeksDashboard","openSeeks","item","HideableTextInput","inputId","updateDisplayName","toString","OtherSeekPreview","joinGame","setDisplay","updateDisplay","OtherSeeksDashboard","TogglingButton","toggleBool","trueString","falseString","toggleFunc","CurrentGamePreview","date","updatedAt","dateString","getMonth","getDate","getHours","getMinutes","currentUsersTurn","playerOnesTurn","playerTwo","history","params","pathname","locationInfo","GamesInProgress","games","PastGamesPreview","PreviousGamesDashboard","MultiplayerPage","setAllGames","gameAdded","setGameAdded","toggleForm","setToggleForm","toggleModal","setToggleModal","toggleUserSeeks","setToggleUserSeeks","toggleOtherSeeks","setToggleOtherSeeks","togglePreviousGames","setTogglePreviousGames","userOpenGames","setUserOpenGames","otherOpenGames","setOtherOpenGames","bannerMessage","setBannerMessage","userGamesInProgress","setUserGamesInProgress","refreshBuffer","refreshId","usersPastGames","setUsersPastGames","useEffect","pullAllData","clearInterval","callRefresh","setInterval","gameRefresh","retrieveGames","retrieveOpenGames","retrieveCurrentGames","retrievePreviousGames","getSeconds","toggleNewGameDisplay","popup","newGame","historyIndex","apiCalls","currentGames","currentOpenGames","userOpenSeeks","otherOpenSeeks","currToSort","sort","b","previousGames","reverse","gamesInProgress","removeGame","status","show","React","Resign","resign","MultiplayerDashboard","usersTurn","winnerDisplayName","MultiplayerGameEndModal","PlayMultiplayer","useParams","userIsPlayerOne","setUserIsPlayerOne","firstPlayersTurn","setFirstPlayersTurn","setHistory","currentHistoryIndex","setCurrentHistoryIndex","allowedMultiJumps","setAllowedMultiJumps","setGameOver","setCurrentUsersTurn","gameInfoFromDatabase","setGameInfoFromDatabase","initialLoad","setInitialLoad","refreshGameData","intervalGameUpdate","updateStateFromDatabase","multijumpOptions","dbId","res","updatedGame","attemptMove","origin","playerOnesPiece","parseInt","undefined","newBoard","gameStatusCheck","gameUpdate","resignGame","direction","App","pieceShape","setPieceShape","boardstyle","setBoardstyle","flipBoard","setFlipBoard","traverseHistory","changeBoardStyle","setUser","onAuthStateChanged","userAuth","Provider","path","component","render","props","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84ecfa8f.chunk.js","sourcesContent":["const TokenPiece = ({id, pieceColor, pieceIsKing, styleInfo}) => {\r\n    const drag = (event)=>{\r\n         event.dataTransfer.setData(\"text\", id);\r\n         event.dataTransfer.setData(\"color\", pieceColor);\r\n    }\r\n    let className;\r\n    if(pieceColor === 'black') className = 'p1';\r\n    if(pieceColor === 'red') className = 'p2';\r\n    if(pieceIsKing) className += ' king';\r\n    if(styleInfo.shape === 'circle') className += ' piece-circle';\r\n    else if(styleInfo.shape === 'square') className += ' piece-square';\r\n\r\n    className += ' ' + styleInfo.boardStyle;\r\n  return (\r\n    <div className={`piece ${className}`} id={id} draggable=\"true\" onDragStart={(event) => drag(event)} >\r\n    {pieceIsKing && (<svg className='king-icon' width=\"184.099px\" height=\"184.099px\" viewBox=\"0 0 184.099 184.099\">\r\n        <path d=\"M182.23,54.814c-1.675-1.258-3.982-1.245-5.633,0.027l-48.457,36.991L96.337,19.979c-1.504-3.386-7.055-3.386-8.564,0\r\n            l-32.175,72.68L7.563,54.878c-1.659-1.297-3.979-1.333-5.669-0.088c-1.696,1.254-2.338,3.492-1.577,5.443l33.372,86.229\r\n            c0.691,1.803,2.43,2.984,4.357,2.984h108.009c1.942,0,3.666-1.176,4.36-2.984l33.368-86.229\r\n            C184.538,58.282,183.905,56.068,182.23,54.814z M142.852,140.099h-101.6L15.193,72.774l39.357,30.948\r\n            c1.13,0.895,2.606,1.218,4.022,0.853c1.404-0.342,2.564-1.315,3.151-2.643l30.333-68.516l29.928,67.626\r\n            c0.591,1.304,1.729,2.277,3.118,2.631c1.388,0.365,2.861,0.061,4.006-0.816l39.981-30.521L142.852,140.099z M150.244,161.983\r\n            c0,2.582-2.095,4.677-4.677,4.677H38.526c-2.582,0-4.676-2.095-4.676-4.677s2.095-4.677,4.676-4.677h107.041\r\n            C148.155,157.307,150.244,159.401,150.244,161.983z\"/>\r\n      </svg>)}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TokenPiece\r\n","import Token from './TokenPiece';\r\nconst Square = ({color, number, populated, setBoard, pieceColor, pieceIsKing, styleInfo}) => {\r\n    function drop(event){\r\n        setBoard(event.target.id.replace('square', ''), event.dataTransfer.getData('text'),event.dataTransfer.getData('color') );\r\n    }\r\n    const allowDrop=(event)=>{\r\n        if(color === 'black'){\r\n        event.preventDefault();\r\n        \r\n        }\r\n    }\r\n    let squareColor = color ==='black' ? '#954535': '#d2a56d' ;\r\n    let textColor = color === 'black' ? 'white' : 'black';\r\n    if(styleInfo.boardStyle === 'bw') squareColor = textColor;\r\n    if(styleInfo.boardStyle === 'green') squareColor = color=== 'black' ? '#32612D' : '#5ca08e'; \r\n    \r\n    return (\r\n        <div id={'square' + number} draggable='false' onDragOver={(e)=>allowDrop(e)} onDrop={(event)=>drop(event)} className = 'square' onClick = {()=>{console.log(populated)}} style={{backgroundColor: squareColor, color: textColor }} >\r\n            {populated ? <Token styleInfo = {styleInfo} pieceIsKing ={pieceIsKing}  pieceColor = {pieceColor} id={number}/> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import Square from './Square';\r\nconst Board = ({boardState, setBoard, styleInfo}) => {\r\n    return (<div className = {`board ${styleInfo.flipboard ? 'rotated' : ''}`}>\r\n                {boardState.map((num, index)=><Square number={num.number} pieceColor = {num.pieceColor} pieceIsKing = {num.pieceIsKing} setBoard = {setBoard} color={num.color} populated = {num.hasPiece} rowNum = { Math.floor(num.number / 8)} styleInfo={styleInfo} key={index} />)}\r\n        </div>\r\n    )\r\n}\r\nexport default Board\r\n","const MoveArrows = ({viewHistory}) => {\r\n    return (\r\n        <span className='move-arrows grid-item'>\r\n            <span onClick={() => viewHistory('beginning')} className='double-arrow-left' ><svg className=\"double-arrow\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" role=\"img\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M34.5 239L228.9 44.7c9.4-9.4 24.6-9.4 33.9 0l22.7 22.7c9.4 9.4 9.4 24.5 0 33.9L131.5 256l154 154.7c9.3 9.4 9.3 24.5 0 33.9l-22.7 22.7c-9.4 9.4-24.6 9.4-33.9 0L34.5 273c-9.3-9.4-9.3-24.6 0-34zm192 34l194.3 194.3c9.4 9.4 24.6 9.4 33.9 0l22.7-22.7c9.4-9.4 9.4-24.5 0-33.9L323.5 256l154-154.7c9.3-9.4 9.3-24.5 0-33.9l-22.7-22.7c-9.4-9.4-24.6-9.4-33.9 0L226.5 239c-9.3 9.4-9.3 24.6 0 34z\"></path></svg></span>\r\n            <span onClick={() => viewHistory('left')} className='chevron left'></span>\r\n            <span onClick={() => viewHistory('right')} className='chevron right'></span>\r\n            <span onClick={() => viewHistory('present')} className='double-arrow-right' ><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" viewBox=\"0 0 512 512\" className=\"double-arrow\"><path fill=\"currentColor\" d=\"M477.5 273L283.1 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.7-22.7c-9.4-9.4-9.4-24.5 0-33.9l154-154.7-154-154.7c-9.3-9.4-9.3-24.5 0-33.9l22.7-22.7c9.4-9.4 24.6-9.4 33.9 0L477.5 239c9.3 9.4 9.3 24.6 0 34zm-192-34L91.1 44.7c-9.4-9.4-24.6-9.4-33.9 0L34.5 67.4c-9.4 9.4-9.4 24.5 0 33.9l154 154.7-154 154.7c-9.3 9.4-9.3 24.5 0 33.9l22.7 22.7c9.4 9.4 24.6 9.4 33.9 0L285.5 273c9.3-9.4 9.3-24.6 0-34z\" ></path></svg></span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default MoveArrows\r\n","const PlayAgain = ({gameOver, resetGame}) => {\r\n    return (\r\n        <button onClick = {resetGame} className = 'play-again' >\r\n            {gameOver ? `Play Again` : `Restart Game`}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PlayAgain\r\n","const FlipBoard = ({rotateBoard}) => {\r\n    return (\r\n        <span className = 'board-flip'>\r\n            flip board &nbsp; &nbsp;\r\n            <svg onClick = {rotateBoard} className = 'board-flip-svg'\r\n\t viewBox=\"0 0 489.645 489.645\">\r\n\t<path d=\"M460.656,132.911c-58.7-122.1-212.2-166.5-331.8-104.1c-9.4,5.2-13.5,16.6-8.3,27c5.2,9.4,16.6,13.5,27,8.3\r\n\t\tc99.9-52,227.4-14.9,276.7,86.3c65.4,134.3-19,236.7-87.4,274.6c-93.1,51.7-211.2,17.4-267.6-70.7l69.3,14.5\r\n\t\tc10.4,2.1,21.8-4.2,23.9-15.6c2.1-10.4-4.2-21.8-15.6-23.9l-122.8-25c-20.6-2-25,16.6-23.9,22.9l15.6,123.8\r\n\t\tc1,10.4,9.4,17.7,19.8,17.7c12.8,0,20.8-12.5,19.8-23.9l-6-50.5c57.4,70.8,170.3,131.2,307.4,68.2\r\n\t\tC414.856,432.511,548.256,314.811,460.656,132.911z\"/>\r\n</svg>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default FlipBoard\r\n","import MoveArrows from './MoveArrows'; \r\nimport PlayAgain from './PlayAgain';\r\nimport FlipBoard from './FlipBoard';\r\nconst Dashboard = ({player, viewHistory, gameOver, resetGame, styleInfo, rotateBoard}) => {\r\n    return (\r\n        <div className = 'dashboard'  >\r\n           <span className = 'player-info grid-item'>{gameOver ? `Game over! ` : player ? `Player one's turn` : `Player two's turn`} <span className ={player ? 'p1 ex ' + styleInfo.shape +' ' + styleInfo.boardStyle : 'p2 ex '+ styleInfo.shape +' ' + styleInfo.boardStyle} ></span></span> \r\n           <MoveArrows viewHistory = {viewHistory} />\r\n           <PlayAgain resetGame = {resetGame} gameOver = {gameOver}/>\r\n           <FlipBoard rotateBoard = {rotateBoard}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","const CalculateLegalMoves = (goalSquare, startSquare, board, playerOne) => {\r\n    if( ! board[startSquare] )return  { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions:[], isKing:false };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    let edges  = [1,3,5,7,56,58,60,62];\r\n    let singleJumpOption = [];\r\n    let jumpedSquare = [];\r\n    let resObject = { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions:[], isKing: board[startSquare].pieceIsKing };\r\n    let baseMoveLeft, baseMoveRight, jumpLeft, jumpRight;\r\n    let options = [];\r\n    if (playerOne) {\r\n        baseMoveLeft = -9\r\n        baseMoveRight = -7;\r\n        jumpLeft = -18;\r\n        jumpRight = -14;\r\n    } else {\r\n        baseMoveLeft = 7;\r\n        baseMoveRight = 9;\r\n        jumpLeft = 14;\r\n        jumpRight = 18;\r\n    }\r\n    const calcSingleJumpOptions = (start, baseMove, jumpMove, player, multi = false)=>{\r\n        if(!corners.includes(start+baseMove) && start+ baseMove >= 0 && start + baseMove < 64 && board[start+baseMove].hasPiece && ((player && board[start+baseMove].pieceColor === 'red') || (!player && board[start + baseMove].pieceColor ==='black')) && ! board[start + jumpMove].hasPiece ){\r\n           if(! multi){ singleJumpOption.push(start + jumpMove);\r\n            jumpedSquare.push(start + baseMove);\r\n           }else{\r\n               resObject.multiJump = true;\r\n               resObject.multiJumpOptions.push(start + jumpMove);\r\n           }\r\n        }\r\n    }\r\n    if(startSquare % 8 !== 7) options.push(startSquare + baseMoveRight);\r\n    if(startSquare % 8 !== 0) options.push(startSquare + baseMoveLeft);\r\n    if(resObject.isKing && startSquare % 8 !== 7) options.push(startSquare - baseMoveLeft);\r\n    if(resObject.isKing && startSquare % 8 !== 0) options.push(startSquare - baseMoveRight);\r\n    //jump logic\r\ncalcSingleJumpOptions(startSquare, baseMoveLeft, jumpLeft, playerOne);\r\ncalcSingleJumpOptions(startSquare, baseMoveRight, jumpRight, playerOne);\r\nif(resObject.isKing){\r\n    calcSingleJumpOptions(startSquare, -baseMoveRight, -jumpRight, playerOne);\r\n    calcSingleJumpOptions(startSquare, -baseMoveLeft, -jumpLeft, playerOne);\r\n}\r\n    if (options.includes(goalSquare)) {\r\n        resObject.valid = true;     \r\n    }else if(singleJumpOption.includes(goalSquare)){\r\n        resObject.valid = true;\r\n        resObject.jumpedSquare = jumpedSquare[singleJumpOption.indexOf(goalSquare)];\r\n        resObject.jump = true;\r\n        //calculating multijumps\r\n        if(goalSquare % 8 !==  0){\r\n            calcSingleJumpOptions(goalSquare, baseMoveLeft, jumpLeft, playerOne, true );\r\n        }\r\n        if(goalSquare % 8 !== 7){\r\n            calcSingleJumpOptions(goalSquare, baseMoveRight, jumpRight, playerOne, true );\r\n        }\r\n        if(resObject.isKing && goalSquare % 8!== 0){\r\n            calcSingleJumpOptions(goalSquare, - baseMoveRight, -jumpRight, playerOne, true);\r\n        }\r\n        if(resObject.isKing && goalSquare % 8 !== 7){\r\n            calcSingleJumpOptions(goalSquare, -baseMoveLeft, -jumpLeft, playerOne, true);\r\n        }\r\n\r\n    }\r\n    if(resObject.valid && edges.includes(goalSquare) && ((playerOne && goalSquare % 2 === 1 || (!playerOne && goalSquare % 2 === 0)))) resObject.isKing = true;\r\n    \r\n    return resObject;\r\n}\r\n\r\nexport default CalculateLegalMoves\r\n","const CalculateGameStatus = (boardState, playerOneTurn) => {\r\n    const resObject = { gameOver: true, winner: playerOneTurn ? 'two':'one'   };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    const moveLeftAndRight = (square) => {\r\n        let num = square.number;\r\n        let moveLeft = -9;\r\n        let moveRight = -7;\r\n        let moveBackLeft = 7;\r\n        let moveBackRight = -9;\r\n        if (!playerOneTurn) {\r\n            moveLeft = 7\r\n            moveRight = 9;\r\n            moveBackRight = -7\r\n            moveBackLeft = -9\r\n        }\r\n        //try moving left and right, no jump\r\n        if (num % 8 !== 0 && num + moveLeft >= 0 && num + moveLeft <= 64 && boardState[num + moveLeft].hasPiece === false) return true;\r\n        if (num % 8 !== 7 && num + moveRight >= 0 && num + moveRight <= 64 && boardState[num + moveRight].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 0 && num + moveBackLeft >= 0 && num + moveBackLeft <= 64 && boardState[num + moveBackLeft].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 7 && num + moveBackRight >= 0 && num + moveBackRight <= 64 && boardState[num + moveBackRight].hasPiece === false) return true;\r\n        //try moving left and right via jumping. Ugly, but can clean up later into a code that just takes in parameters of move directions & player\r\n        if (num % 8 !== 0 && num + (moveLeft * 2) >= 0 && num + (moveLeft * 2) <= 64 && ! corners.includes(num+moveLeft) && boardState[num + moveLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveLeft].pieceColor === 'black')) && boardState[num + (moveLeft * 2 )].hasPiece === false ) return true;\r\n        if (num % 8 !== 7 && num + (moveRight * 2) >= 0 && num + (moveRight * 2) <= 64 && ! corners.includes(num+moveRight) && boardState[num + moveRight].hasPiece === true && ((playerOneTurn && boardState[num + moveRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveRight].pieceColor === 'black')) && boardState[num + (moveRight * 2 )].hasPiece === false ) return true;\r\n        if (square.pieceIsKing && num % 8 !== 7 && num + (moveBackRight * 2) >= 0 && num + (moveBackRight * 2) <= 64 && ! corners.includes(num+moveBackRight) && boardState[num + moveBackRight].hasPiece === true && ((playerOneTurn && boardState[num + moveBackRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackRight].pieceColor === 'black')) && boardState[num + (moveBackRight * 2 )].hasPiece === false ) return true;\r\n        if (square.pieceIsKing && num % 8 !== 0 && num + (moveBackLeft * 2) >= 0 && num + (moveBackLeft * 2) <= 64 && ! corners.includes(num+moveBackLeft) && boardState[num + moveBackLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'black')) && boardState[num + (moveBackLeft * 2 )].hasPiece === false ) return true;  \r\n    }\r\n    boardState.forEach(square => {\r\n        if (square.hasPiece && ((playerOneTurn && square.pieceColor === 'black') || (!playerOneTurn && square.pieceColor === 'red'))) {\r\n            let canMove = moveLeftAndRight(square);\r\n            if (canMove) {\r\n                resObject.gameOver = false;\r\n                return resObject\r\n            }\r\n\r\n        }\r\n    });\r\n    return resObject;\r\n}\r\nexport default CalculateGameStatus\r\n","import PlayAgain from './PlayAgain';\r\nconst GameEndModal = ({gameOver, resetGame}) => {\r\n    const close = ()=>{\r\n        let hideModal = document.getElementsByClassName('end-modal')[0];\r\n        hideModal.style.visibility = 'hidden';\r\n    }\r\n\r\n    let display = gameOver.gameOver ? 'flex' : 'none';\r\n    return (\r\n        <div className = 'end-modal' style={{display: display}}>\r\n            <span onClick = {close} className = 'close-modal'>X</span>\r\n           <p>Player {gameOver.winner} has won!</p>\r\n           <PlayAgain resetGame={resetGame} gameOver = {gameOver.gameOver}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameEndModal\r\n","const originalBoard = [{ number: 0, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 1, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 2, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 3, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 4, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 5, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 6, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 7, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 8, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 9, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 10, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 11, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 12, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 13, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 14, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 15, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 16, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 17, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 18, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 19, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 20, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 21, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 22, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 23, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 24, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 25, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 26, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 27, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 28, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 29, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 30, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 31, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 32, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 33, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 34, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 35, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 36, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 37, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 38, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 39, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 40, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 41, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 42, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 43, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 44, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 45, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 46, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 47, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 48, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 49, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 50, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 51, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 52, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 53, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 54, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 55, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 56, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 57, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 58, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 59, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 60, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 61, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 62, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 63, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false }];\r\nexport default originalBoard\r\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p> &copy; {new Date().getFullYear()}, <a target = '_blank' rel='noreferrer'  href='https://mattdwinell.github.io'>Matthew Dwinell</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","const About = () => {\r\n    return (\r\n        <div className = 'about'>\r\n            <p> &nbsp;&nbsp;&nbsp;&nbsp;I hope this version of checkers amused you— there are a lot of checkers apps out there, and I wanted to put my own spin on the ruleset. When I was a kid, I was told that you didn’t have to jump a piece if you didn’t want to, but if you did a single-jump, you were obligated to double (or triple) jump if it was possible. Sure, it <i>might</i> have been a forgiving way to play, but it also allows an opponent to set up traps where a king has to double jump and be subsequently taken. Happy playing!</p>\r\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;This checkers app was created as a solo project by me, Matthew Dwinell. I built the clientside SPA in react using functional components and effect/state hooks. I used  Node, Express, Sequelize, Firebase, and a good chunk of spare time for the server-side architecture. For more information about projects I’ve worked on, feel free to check out my <a href='https://mattdwinell.github.io' rel='noreferrer' target='_blank'>web portfolio</a>.</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","export default __webpack_public_path__ + \"static/media/checkers_piece_icon.4d65ed96.PNG\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst dotenv = require('dotenv');\r\ndotenv.config();\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBa6KoxDdgymaNzD822dqL4gNGdKw_K0fU\",\r\n    authDomain: \"full-stack-checkers.firebaseapp.com\",\r\n    projectId: \"full-stack-checkers\",\r\n    storageBucket: \"full-stack-checkers.appspot.com\",\r\n    messagingSenderId: \"497212367040\",\r\n    appId: \"1:497212367040:web:2bb3e2824ad3f795ff8d25\"\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const  signInWithGoogle = ()=>{\r\n    auth.signInWithPopup(provider);\r\n}\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const generateUserDocument = async (user, additionalData) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n      const { email, displayName, photoURL } = user;\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          photoURL,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating user document\", error);\r\n      }\r\n    }\r\n    return getUserDocument(user.uid);\r\n  };\r\n  const getUserDocument = async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n      const userDocument = await firestore.doc(`users/${uid}`).get();\r\n      return {\r\n        uid,\r\n        ...userDocument.data()\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching user\", error);\r\n    }\r\n  };","import {Navbar, Nav,Col , Row} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from './../images/checkers_piece_icon.PNG';\r\nimport {auth} from './../auth/firebase';\r\nconst TopNav = () => {\r\n  const signOutAndRedirect = async()=>{\r\n    window.location.href = window.location.host;\r\n    await auth.signOut();\r\n  }\r\n\r\n    return (\r\n<Navbar  bg=\"light\" expand=\"sm\" className = 'style-nav-bar' >\r\n\r\n  <Navbar.Brand> \r\n      <Link exact to='/'><div className = 'logo-holder'> <img src = {logo} alt='checkers logo'/></div></Link>\r\n       </Navbar.Brand>\r\n\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Row>\r\n    <Nav defaultActiveKey = '/' className=\"mr-auto\">\r\n    <Col md={3}>\r\n       <Nav.Item>\r\n      <Link className='top-nav-link' to='/multiplayer'>Multiplayer</Link>\r\n       </Nav.Item>\r\n       </Col>\r\n      <Col md={3}><Nav.Item>\r\n     <Link className='top-nav-link' to='/' >Solo Play</Link>          \r\n       </Nav.Item>\r\n       </Col>\r\n       <Col md={3}>\r\n       <Nav.Item>\r\n      <Link className='top-nav-link' to='/preferences'>Preferences</Link>\r\n       </Nav.Item>\r\n       </Col> \r\n       <Col md={3}><Nav.Item>\r\n     <Link className='top-nav-link' to='/rules' >Rules</Link>          \r\n       </Nav.Item>\r\n       </Col>\r\n       <Col md={3}>\r\n       <Nav.Item>\r\n   <Link className='top-nav-link' to='/about'>About</Link>   \r\n       </Nav.Item>\r\n       </Col>\r\n       <Col md={3}>\r\n       <Nav.Item>\r\n       <Link to='/'> <button onClick = {signOutAndRedirect}> Sign out</button>  </Link> \r\n       </Nav.Item>\r\n       </Col>\r\n       \r\n    </Nav>\r\n      </Row>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}\r\n\r\nexport default TopNav\r\n","const Preferences = ({changeShape, style, changeBoardstyle}) => {\r\n    return (\r\n        <div className = 'preferences-page'>\r\n           <h4>Customize Board</h4>\r\n\r\n        <div className='radio-control'>\r\n          Piece shape\r\n            <div>\r\n                <input onChange = {()=>changeShape(document.querySelector('input[name=\"shape\"]:checked').value)} defaultChecked={style.shape === 'circle'} type='radio' value ='circle' name='shape' />\r\n                <label htmlFor='circle'> &nbsp;Round</label>\r\n            </div>\r\n            <div>\r\n                <input onChange = {()=>changeShape(document.querySelector('input[name=\"shape\"]:checked').value)} defaultChecked={style.shape === 'square'} name='shape' value='square' type='radio'  />\r\n                <label htmlFor='square'> &nbsp;Square</label>\r\n            </div>\r\n        </div>\r\n        <div className='radio-control'>\r\n          Board Color\r\n            <div>\r\n                <input onChange = {()=>changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)} defaultChecked={style.boardStyle === 'brown'}  type='radio' value ='brown' name='boardstyle' />\r\n                <label htmlFor='circle'> &nbsp;Brown and Tan</label>\r\n            </div>\r\n            <div>\r\n                <input onChange = {()=>changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)}  name='boardstyle' value='bw' type='radio' defaultChecked={style.boardStyle === 'bw'}   />\r\n                <label htmlFor='square'> &nbsp;Black and White</label>\r\n            </div>\r\n            <div>\r\n                <input onChange = {()=>changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)}  name='boardstyle' value='green' type='radio' defaultChecked={style.boardStyle === 'green'}   />\r\n                <label htmlFor='square'> &nbsp;Shades of Green</label>\r\n            </div>\r\n        </div>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preferences\r\n","const Rules = () => {\r\n    return (\r\n        <div className = 'rules'>\r\n            <h5>General rules</h5>\r\n            <p>Your goal is to remove all of the opponent's pieces by capturing them or forcing them into a position where they cannot move.</p>\r\n            <p>Any piece can move diagonally forward, only kings can move diagonally backwards.</p>\r\n            <p>A simple checkers move would be moving your piece diagonally forward one square.</p>\r\n            <p>Jumping requires that the nearest diagonal square be occupied by the opponent's piece, and that the subsequent square after that piece is unoccupied.</p>\r\n            <p>When you jump you capture the opponent's piece, removing it from the board.</p>\r\n            <p> For single jumps, jumping is not required.</p>\r\n            <p> If one of your pieces reaches the back-rank of the other side of the board, it becomes a king and can move backwards as well as forwards.</p>\r\n            <h5>House rule</h5>\r\n                <p>While single jumps are not mandatory, if you jump and have the option to double jump, you must take it.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import {useState} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { signInWithGoogle, auth } from \"./firebase\";\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n      event.preventDefault();\r\n      auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n        setError(\"Error signing in with password and email!\");\r\n        console.error(\"Error signing in with password and email\", error);\r\n      });\r\n    };\r\n\r\n      const onChangeHandler = (event) => {\r\n          const {name, value} = event.currentTarget;\r\n\r\n          if(name === 'userEmail') {\r\n              setEmail(value);\r\n          }\r\n          else if(name === 'userPassword'){\r\n            setPassword(value);\r\n          }\r\n      };\r\n\r\n  return (\r\n    <div className=\"mt-8 login-page\">\r\n      <h1 className=\"bg-header text-center font-bold\">Sign In- Multiplayer Checkers</h1>\r\n      <div className=\"login-form\">\r\n        {error !== null && <div className = \"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n        <form className=\"inner-login-form\">\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n           &nbsp;&nbsp; Email:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value = {email}\r\n            placeholder=\"E.g: abcd123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            &nbsp; &nbsp; Password:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value = {password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          /> &nbsp;\r\n          <button className=\"login-button\" onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}}>\r\n            Sign in\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center inner-login-form\">or</p>\r\n        <button\r\n          className=\"login-button\" onClick = {signInWithGoogle}>\r\n          Sign in with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"signUp\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign up here\r\n          </Link>{\" \"}\r\n          <br />{\" \"}\r\n          <Link to = \"passwordReset\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Forgot Password?\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signInWithGoogle, auth, generateUserDocument } from \"./firebase\";\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\r\n    event.preventDefault();\r\n    try{\r\n        const {user} = await auth.createUserWithEmailAndPassword(email, password);\r\n        // generateUserDocument(user, {displayName});\r\n        const firebaseUser = auth.auth().currentUser;\r\n        console.log(firebaseUser);\r\n      }\r\n      catch(error){\r\n        setError('Error Signing up with email and password');\r\n      }\r\n  \r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setDisplayName(\"\");\r\n  };\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    } else if (name === \"displayName\") {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-8 login-page\">\r\n      <h1 className=\"bg-header text-center font-bold\">Sign Up-Multiplayer Checkers</h1>\r\n      <div className=\"login-form\">\r\n        {error !== null && (\r\n          <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form className=\"\">\r\n          <label htmlFor=\"displayName\" className=\"block\">\r\n            Display Name: &nbsp;\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-1 p-1 w-full \"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            placeholder=\"E.g: Faruq\"\r\n            id=\"displayName\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n          &nbsp;&nbsp;  Email:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"E.g: faruq123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <br/>\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />&nbsp;\r\n          <button\r\n            className=\"login-button\"\r\n            onClick={event => {\r\n              createUserWithEmailAndPasswordHandler(event, email, password);\r\n            }}\r\n          >\r\n            Sign up\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center\">or</p>\r\n        <button\r\n          className=\"login-button\" onClick = {signInWithGoogle}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign in here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUp;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {auth} from './firebase';\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  const sendResetEmail = event => {\r\n    event.preventDefault();\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        setEmailHasBeenSent(true);\r\n        setTimeout(() => {setEmailHasBeenSent(false)}, 3000);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Error resetting password\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"mt-8 login-page\">\r\n      <h1 className=\"bg-header text-center font-bold\">\r\n        Reset your Password\r\n      </h1>\r\n      <div className=\"login-form\">\r\n        <form className = 'inner-login-form' action=\"\">\r\n          {emailHasBeenSent && (\r\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n              An email has been sent to you!\r\n            </div>\r\n          )}\r\n          {error !== null && (\r\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\r\n            Email:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            id=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"Input your email\"\r\n            onChange={onChangeHandler}\r\n            className=\"mb-3 w-full px-1 py-2\"\r\n          />&nbsp;&nbsp;\r\n          <button onClick = {sendResetEmail}\r\n            className=\"login-button\"\r\n          >\r\n            Send me a reset link\r\n          </button>\r\n        </form>\r\n        <Link\r\n         to =\"/\"\r\n          className=\"text-blue-700 hover:text-blue-800 text-center \"\r\n        >\r\n          &larr; back to sign in page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordReset;","import { createContext, Component } from \"react\";\r\nimport { auth } from \"../auth/firebase\";\r\n\r\nexport const UserContext = createContext({ user: null });\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // console.log('mounted');\r\n    auth.onAuthStateChanged(userAuth => {\r\n      console.log(userAuth.uid);\r\n      this.setState({ user: userAuth.uid});\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={this.state.user}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\nexport default UserProvider;","import axios from 'axios';\r\nexport default{\r\n    getGames: function(uid){\r\n        return axios({\r\n            url:'/api/games',\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        });\r\n    },\r\n    getGameById: function(gameId){\r\n        return axios({\r\n            url:'/api/games/find-one/'+ gameId,\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        });\r\n    },\r\n    getGamesInProgress: function(uid){\r\n        return axios({\r\n            url:'/api/games/'+ encodeURI(uid),\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        });\r\n    },\r\n    getOpenGames: function(uid){\r\n        return axios({\r\n            url: '/api/games/open/' + encodeURI(uid),\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        })\r\n    },\r\n    getPastGames: function(uid){\r\n        return axios({\r\n            url: '/api/games/past/' + encodeURI(uid),\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        })\r\n    },\r\n    createGame: function(gameData){\r\n        return axios({\r\n            url:'/api/games',\r\n            headers:{'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'post',\r\n            data: gameData\r\n        });\r\n    },\r\n    deleteGame: function(id){\r\n        return axios({\r\n            url: '/api/games/' + id,\r\n            headers:{'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'delete'\r\n        })\r\n    },\r\n    updateGame: function(game){\r\n        return axios({\r\n            url:'/api/games/' + game.id,\r\n            headers:{'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'put',\r\n            data: game\r\n        })\r\n    }\r\n}","const NewGameDashboard = ({display, makeNewGame, hideShowForm}) => {\r\n    const formValidateAndSubmit = async(e)=>{\r\n        e.preventDefault();\r\n        let formData =  new FormData(document.querySelector('#newGameForm'));\r\n        let playerChoice = formData.get('player');\r\n        let alias = formData.get('alias');\r\n        if(! playerChoice || ! alias || ! alias.length > 0){\r\n            alert('please input a display name for this game');\r\n        }else{\r\n            let createdGame = await makeNewGame(playerChoice, alias);\r\n            // console.log(createdGame);\r\n            if(createdGame){\r\n                hideShowForm('popup');\r\n            }\r\n        }\r\n    }\r\n    return display &&(\r\n        <div className = 'new-game-dashboard'> \r\n            <form id='newGameForm' name='newGameForm' className='new-game-form'>\r\n              <h6>I would like to go...</h6>\r\n              <div className='new-game-form-input'>  <input type=\"radio\" name=\"player\" value=\"p1\" defaultChecked='true'></input><label htmlFor='p1'> First</label></div>\r\n              <div className='new-game-form-input'> <input type=\"radio\" name=\"player\" value=\"p2\"></input><label htmlFor='p1'> Second</label></div>\r\n              <h6>Choose your display name for this game:</h6>\r\n              <div className = 'new-game-form-input'><input maxLength='16' type='text' placeholder='e.g. checkersfiend' name='alias' ></input>&nbsp;&nbsp;\r\n              <button onClick = {(e)=>formValidateAndSubmit(e)}>create new game</button>\r\n              </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewGameDashboard\r\n","const GameCreateJoinModal = ({hideShow, display, message}) => {\r\n    return display&& (\r\n        <div className = 'banner-modal' onClick={hideShow}>\r\n          {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameCreateJoinModal\r\n","const UserSeekPreview = ({game, cancel}) => {\r\n    return (\r\n        <tr className='seek-preview'>\r\n           <td className = {game.playerOneDisplayName ? 'tan-highlight' : ''}>{game.playerOneDisplayName || 'Waiting...'}</td><td className = {game.playerTwoDisplayName ? 'tan-highlight' : ''}>{game.playerTwoDisplayName || 'Waiting...'}</td><td ><span onClick = {()=>cancel(game.id)} className='delete-request'>X</span></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserSeekPreview\r\n","import UserSeekPreview from './UserSeekPreview';\r\nconst UserSeeksDashboard = ({display,openSeeks, cancel}) => {\r\n    return display && (\r\n        <table className = 'preview-dashboard'>\r\n            \r\n                <thead><tr>\r\n            <th>Player One</th><th>Player Two</th><th>Remove</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {openSeeks.map((item, index)=> <UserSeekPreview cancel={cancel} game={item} key={index} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserSeeksDashboard\r\n","const HideableTextInput = ({display, inputId, updateDisplayName}) => {\r\n    return display && (\r\n        <>\r\n          <input id={`input-${inputId.toString()}`} onChange={(e)=>updateDisplayName(e.target.value)}  type='text' maxLength='16' placeholder='Display Name'></input> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HideableTextInput\r\n","import HideableTextInput from './HideableTextInput';\r\nimport {useState} from 'react';\r\nconst OtherSeekPreview = ({game, joinGame}) => {\r\n    const [display, setDisplay] = useState(false);\r\n    const [displayName, setDisplayName] = useState('');\r\n    const updateDisplay = async()=>{\r\n      if(!display){ setDisplay(true);\r\n    } else{\r\n        console.log(displayName);\r\n        if(displayName.length > 0){\r\n         let join = await joinGame(game, displayName);\r\n         if(join==='success'){\r\n             setDisplay(false);\r\n         }\r\n        }\r\n      }\r\n    }\r\n    const updateDisplayName = (name)=>{\r\n        setDisplayName(name);\r\n    }\r\n    return (\r\n        <tr className='seek-preview'>\r\n           <td className = {game.playerOneDisplayName ? 'tan-highlight' : ''}>{game.playerOneDisplayName || 'Waiting...'}</td><td className = {game.playerTwoDisplayName ? 'tan-highlight' : ''}>{game.playerTwoDisplayName || 'Waiting...'}</td><td ><HideableTextInput updateDisplayName={updateDisplayName} inputId={game.id} display={display}/><span className ='join-new-game' onClick = {updateDisplay}>&#10003;</span></td>\r\n        </tr>\r\n\r\n    )\r\n}\r\n\r\nexport default OtherSeekPreview\r\n","import OtherSeekPreview from './OtherSeekPreview';\r\nconst OtherSeeksDashboard = ({display, openSeeks, joinGame}) => {\r\n    return display && (\r\n        <table className = 'preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n            <th>Player One</th><th>Player Two</th><th>Join</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n           {openSeeks.map((item, index)=> <OtherSeekPreview joinGame = {joinGame} game={item} key={index} />)}\r\n            </tbody> \r\n       </table>\r\n    )\r\n}\r\n\r\nexport default OtherSeeksDashboard\r\n","const TogglingButton = ({toggleBool, trueString, falseString, toggleFunc}) => {\r\n    return (\r\n        <div className = 'style-button'>\r\n        <button className = {toggleBool ? `red-background` : ``} onClick = {()=>(toggleFunc(false))}> {toggleBool ? trueString : falseString}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TogglingButton\r\n","import {Link} from 'react-router-dom';\r\nconst CurrentGamePreview = ({game, user}) => {\r\n    let date = new Date(game.updatedAt);\r\n    let dateString = (date.getMonth() +1) + '/' + date.getDate() + '/' + date.getFullYear()+ ',  ' + date.getHours()+ ':' + (date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()) + ' (EDT)' ;\r\n    let currentUsersTurn = game.playerOnesTurn && user.uid == game.playerOne || ! game.playerOnesTurn && user.uid == game.playerTwo \r\n\r\n    return (\r\n        <tr className = {currentUsersTurn? 'preview user-turn' : 'preview opponent-turn'}>\r\n            <td>&nbsp;{game.playerOneDisplayName}{game.playerOne === user.uid ? ' (you)' : ''}</td>\r\n            <td>{game.playerTwoDisplayName}{game.playerTwo === user.uid ? ' (you)' : ''}</td>\r\n            <td>{currentUsersTurn ? 'Your go' : 'their turn'}</td>\r\n            <td>{game.history.length -1}</td>\r\n            <td>{dateString}</td>\r\n            <td><Link to={{ params:{id: game.id} ,pathname:`/play-multiplayer/${game.id}`,locationInfo:{game: game, user: user}}}>\r\n                <button className = 'preview-action-btn'>{currentUsersTurn ? 'play' : 'View Board'}</button></Link></td>\r\n            \r\n        </tr>\r\n        \r\n    )\r\n}\r\n\r\nexport default CurrentGamePreview","import CurrentGamePreview from './CurrentGamePreview';\r\nconst GamesInProgress = ({games, user}) => {\r\n    return games.length > 0 &&(\r\n        <>\r\n        <h4 className='progress-header'>Games Currently in Progress</h4>\r\n        <table className = 'preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Player One\r\n                    </th>\r\n                    <th>\r\n                        Player Two\r\n                    </th>\r\n                    <th>\r\n                        Turn\r\n                    </th>\r\n                    <th>Moves Made</th>\r\n                    <th>Time of Last Move/ join</th>\r\n                    <th>Play</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {games.map((item,index)=><CurrentGamePreview user={user} game={item} key={index} />)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GamesInProgress\r\n","import {Link} from 'react-router-dom'\r\nconst PastGamesPreview = ({game, user}) => {\r\n    return (\r\n        <tr className ='preview'>\r\n            <td>&nbsp;{game.playerOneDisplayName}{game.playerOne === user.uid ? ' (you)' : ''}</td>\r\n            <td>{game.playerTwoDisplayName}{game.playerTwo === user.uid ? ' (you)' : ''}</td>\r\n            <td>{game.history.length -1}</td>\r\n            <td>{game.winner === game.playerOne ? game.playerOneDisplayName : game.playerTwoDisplayName}</td>\r\n            <td><Link to={{ params:{id: game.id} ,pathname:`/play-multiplayer/${game.id}`}}>\r\n                <button className = 'preview-action-btn'>View Board</button></Link></td>\r\n            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PastGamesPreview\r\n","import PastGamesPreview from './PastGamesPreview';\r\nconst PreviousGamesDashboard = ({games, display, user}) => {\r\n    return display && (\r\n        <table className = 'preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n            <th>Player One</th><th>Player Two</th><th># of Moves</th><th>Winner</th><th>Board</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n           {games.map((item, index)=> <PastGamesPreview user={user}  game={item} key={index} />)}\r\n            </tbody> \r\n       </table>\r\n    )\r\n}\r\n\r\nexport default PreviousGamesDashboard\r\n","import apiCalls from '../Utils/apiCalls';\r\nimport originalBoard from '../Utils/OriginalBoard';\r\nimport {useState, useEffect} from 'react';\r\nimport AllMultiplayerGames from './AllMultiplayerGames';\r\nimport NewGameDashboard from './NewGameDashboard';\r\nimport GameCreateJoinModal from './GameCreateJoinModal';\r\nimport UserSeeksDashboard from './UserSeeksDashboard';\r\nimport OtherSeeksDashboard from './OtherSeeksDashboard';\r\nimport TogglingButton from './TogglingButton';\r\nimport GamesInProgress from './GamesInProgress';\r\nimport PreviousGamesDashboard from './PreviousGamesDashboard';\r\nconst MultiplayerPage = ({user}) => {\r\n    const [allGames, setAllGames] = useState([]);\r\n    const [gameAdded, setGameAdded] = useState(0);\r\n    const [toggleForm, setToggleForm] = useState(false);\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n    const [toggleUserSeeks, setToggleUserSeeks] = useState(false);\r\n    const [toggleOtherSeeks, setToggleOtherSeeks] = useState(false);\r\n    const [togglePreviousGames, setTogglePreviousGames] = useState(false);\r\n    const [userOpenGames, setUserOpenGames] = useState([]);\r\n    const [otherOpenGames, setOtherOpenGames] = useState([]);\r\n    const [bannerMessage, setBannerMessage] = useState('');\r\n    const [userGamesInProgress, setUserGamesInProgress] = useState([]);\r\n    const [refreshBuffer, setRefreshBuffer] = useState(true);\r\n    const [refreshId, setRefreshId] = useState();\r\n    const [usersPastGames, setUsersPastGames] = useState([]);\r\nuseEffect(async() => {\r\n    await pullAllData();\r\n\r\n}, [gameAdded])\r\nuseEffect(()=>{\r\nif(!refreshBuffer || refreshId) return ()=>clearInterval(refreshId);\r\nlet callRefresh = setInterval(gameRefresh, 5000);\r\nreturn ()=>clearInterval(callRefresh); \r\n},[])\r\nconst pullAllData = async()=>{\r\n    await retrieveGames();\r\n    await retrieveOpenGames();\r\n    await retrieveCurrentGames(); \r\n    await retrievePreviousGames();\r\n}\r\n\r\nconst gameRefresh = ()=>{\r\n    pullAllData();\r\n    console.log('tick:' + new Date().getSeconds());\r\n}\r\n\r\n\r\n// const refreshRate = setInterval(gameRefresh, 5000);\r\nconst toggleNewGameDisplay = (popup = false)=>{\r\n    // console.log(popup);\r\n    if(popup !== false){\r\n        setToggleModal('show');\r\n        setBannerMessage('New Game created! Awaiting opponent.');\r\n    }\r\nsetToggleForm(!toggleForm);\r\n}\r\nconst toggleUserSeeksDisplay =()=>{\r\n    setToggleUserSeeks(!toggleUserSeeks);\r\n}\r\nconst toggleOtherSeeksDisplay = ()=>{\r\n    setToggleOtherSeeks(!toggleOtherSeeks);\r\n}\r\nconst togglePreviousGamesDisplay = () =>{\r\n    setTogglePreviousGames(!togglePreviousGames);\r\n}\r\nconst toggleModalDisplay = (show = false)=>{\r\n    setToggleModal(show==='show' ? true : !toggleModal);\r\n}\r\n     const makeNewGame =async (playerChoice, alias)=>{\r\n         const newGame = {\r\n             board: originalBoard,\r\n             history: [{ board: originalBoard, historyIndex: 0 }],\r\n             gameOver: false,\r\n             playerOnesTurn: true\r\n         }        \r\n          if(playerChoice == 'p1'){\r\n             newGame.playerOne = user.uid;\r\n             newGame.playerOneDisplayName = alias;\r\n         }else if(playerChoice == 'p2'){\r\n             newGame.playerTwo = user.uid;\r\n             newGame.playerTwoDisplayName = alias;\r\n         }else{\r\n             return null;\r\n         }\r\n\r\n         const currentGames = await apiCalls.createGame(newGame);\r\n        //  console.log(currentGames);\r\n         setGameAdded(gameAdded +1);\r\n         return currentGames;\r\n    }\r\n    const retrieveOpenGames = async()=>{\r\n        const currentOpenGames = await apiCalls.getOpenGames(user.uid);\r\n        if(currentOpenGames.data != null){\r\n            const userOpenSeeks = [];\r\n            const otherOpenSeeks = [];\r\n            currentOpenGames.data.map((item, index)=> item.playerOne == user.uid || item.playerTwo == user.uid ? userOpenSeeks.push(item) : otherOpenSeeks.push(item));\r\n            setUserOpenGames(userOpenSeeks);\r\n            setOtherOpenGames(otherOpenSeeks);\r\n        }\r\n    }\r\n\r\n    const retrieveGames = async()=>{\r\n        const currentGames = await apiCalls.getGames(user.uid);\r\n    //    console.log(currentGames);\r\n        if(currentGames.data){\r\n            let currToSort = currentGames.data.sort((a,b)=> a.history.length - b.history.length);\r\n            // currToSort.reverse()\r\n        setAllGames(currToSort);\r\n        }\r\n    }\r\n    const retrievePreviousGames = async()=>{\r\n        const previousGames = await apiCalls.getPastGames(user.uid);\r\n        if(previousGames.data)setUsersPastGames(previousGames.data.sort((a,b)=>a.updatedAt - b.updatedAt).reverse());\r\n    }\r\n    const retrieveCurrentGames = async()=>{\r\n        \r\n        const gamesInProgress = await apiCalls.getGamesInProgress(user.uid);\r\n   //     console.log(gamesInProgress.data);\r\n        if(gamesInProgress.data)setUserGamesInProgress(gamesInProgress.data.sort((a,b)=>a.history.length-b.history.length).reverse());\r\n    }\r\n    const removeGame = async(id)=>{\r\n        let res = await apiCalls.deleteGame(id);\r\n        if(res.status =='200')setGameAdded(gameAdded +1);  \r\n    }\r\n    const joinGame = async (game, displayName)=>{\r\n        if(game.playerOne == null){\r\n            game.playerOne = user.uid;\r\n            console.log(user.uid);\r\n            game.playerOneDisplayName = displayName;\r\n        }else if(game.playerTwo == null){\r\n            game.playerTwo = user.uid;\r\n            game.playerTwoDisplayName = displayName;\r\n        }\r\n        let join = await apiCalls.updateGame(game);\r\n        if(join.status === 200){\r\n            setGameAdded(gameAdded + 1);\r\n            setBannerMessage(`Succesfully joined game against ${game.playerOneDisplayName != displayName ? game.playerOneDisplayName : game.playerTwoDisplayName}`);\r\n           \r\n            setToggleModal(\"show\"); \r\n            return 'success';\r\n        }\r\n    }\r\n    return (<>\r\n    <GameCreateJoinModal message={bannerMessage} hideShow = {toggleModalDisplay} display={toggleModal}/>\r\n        <div className = 'multiplayer-page'>\r\n        &nbsp;&nbsp;<TogglingButton toggleBool = {toggleForm} toggleFunc={toggleNewGameDisplay} trueString = 'cancel new game' falseString = 'Start a new game' />\r\n           &nbsp;&nbsp;&nbsp;\r\n           <NewGameDashboard makeNewGame={makeNewGame} hideShowForm = {toggleNewGameDisplay} display={toggleForm} />\r\n           <TogglingButton toggleBool = {toggleUserSeeks} toggleFunc={toggleUserSeeksDisplay} trueString = 'Hide your open game requests' falseString = 'Show your open game requests' />&nbsp;&nbsp;&nbsp;\r\n           <UserSeeksDashboard cancel={removeGame} display={toggleUserSeeks} openSeeks = {userOpenGames}/><TogglingButton toggleBool = {toggleOtherSeeks} toggleFunc={toggleOtherSeeksDisplay} trueString = 'Hide these requests' falseString ='Game requests from others'  />&nbsp;&nbsp;&nbsp;\r\n           <OtherSeeksDashboard joinGame={joinGame} display={toggleOtherSeeks} openSeeks={otherOpenGames}/>\r\n           <TogglingButton toggleBool={togglePreviousGames} toggleFunc={togglePreviousGamesDisplay} trueString = 'Hide previous games' falseString = 'Show previous games' />\r\n           <PreviousGamesDashboard display={togglePreviousGames} user={user} games={usersPastGames}/>\r\n           <GamesInProgress user={user} games={userGamesInProgress}/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MultiplayerPage\r\n","import React, {useState} from 'react';\r\nconst UserContext = React.createContext([{user: null}, ()=>{}]);\r\n// const UserContextProvider = ({children}) => {\r\n//     const [user, setUser] = useState(null);\r\n//     return (\r\n//         <UserContext.Provider value={{user, setUser}}>\r\n//             {children}\r\n//         </UserContext.Provider>\r\n//     )\r\n// }\r\n\r\nexport{UserContext}\r\n","const Resign = ({resign, gameOver}) => {\r\n    return !gameOver && (\r\n        <button onClick = {resign} className = 'play-again' >\r\n            Resign\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Resign\r\n","import MoveArrows from './MoveArrows';\r\nimport Resign from './Resign';\r\nconst MultiplayerDashboard = ({usersTurn,playerOnesTurn, styleInfo, gameOver, viewHistory, resign}) => {\r\n    return (\r\n        <div className = 'dashboard'>\r\n                       <span className = 'player-info grid-item'>{gameOver.gameOver ? `${gameOver.winnerDisplayName} won ` : usersTurn ? `Your turn` : `Their turn`} <span style={{visibility : gameOver.gameOver ? 'hidden' : 'visible'}}  className ={playerOnesTurn ? 'p1 ex ' + styleInfo.shape +' ' + styleInfo.boardStyle : 'p2 ex '+ styleInfo.shape +' ' + styleInfo.boardStyle} ></span></span>\r\n                       <MoveArrows viewHistory = {viewHistory} /> \r\n                       <Resign gameOver={gameOver.gameOver} resign={resign} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplayerDashboard\r\n","import {Link} from 'react-router-dom';\r\nconst MultiplayerGameEndModal = ({gameOver}) => {\r\n    const close = ()=>{\r\n        let hideModal = document.getElementsByClassName('end-modal')[0];\r\n        hideModal.style.visibility = 'hidden';\r\n    }\r\n    let display = gameOver.gameOver ? 'flex' : 'none';\r\n    return gameOver.gameOver && (\r\n        <div>\r\n            <div className='end-modal' style={{ display: display }}>\r\n                <span onClick={close} className='close-modal'>X</span>\r\n                <p>{gameOver.winnerDisplayName} has won!</p>\r\n                <Link className='return-link' to='/multiplayer'>Return To Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplayerGameEndModal\r\n","import {useLocation, useParams} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport Board from './Board';\r\nimport CalculateLegalMoves from './../Utils/CalculateLegalMoves';\r\nimport CalculateGameStatus from './../Utils/CalculateGameStatus';\r\nimport originalBoard from './../Utils/OriginalBoard';\r\nimport apiCalls from './../Utils/apiCalls';\r\nimport MultiplayerDashboard from './MultiplayerDashboard';\r\nimport MultiplayerGameEndModal from './MultiplayerGameEndModal';\r\n\r\nconst PlayMultiplayer = ({style, user}) => {\r\n  const {id } = useParams();\r\n  const [userIsPlayerOne, setUserIsPlayerOne] = useState(true);\r\n  const [firstPlayersTurn, setFirstPlayersTurn] = useState(true);\r\n  const [board, setBoard] = useState(originalBoard);\r\n  const [history, setHistory] = useState([{ board: originalBoard, historyIndex: 0 }]);\r\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(0);\r\n  const [allowedMultiJumps, setAllowedMultiJumps] = useState([]);\r\n  const [gameOver, setGameOver] = useState({ gameOver: false, winner: null, winnerDisplayName: null });\r\n  const [currentUsersTurn, setCurrentUsersTurn] = useState(false);\r\n  const [gameInfoFromDatabase, setGameInfoFromDatabase] = useState({});\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n\r\nuseEffect(()=>{\r\n  refreshGameData(id);\r\n  let intervalGameUpdate = setInterval(refreshGameData, 2000);\r\n  return ()=>clearInterval(intervalGameUpdate);\r\n},[gameInfoFromDatabase])\r\nconst getGameData = async()=>{\r\n  let res = await apiCalls.getGameById(id);\r\n  return res.data;\r\n}\r\n  const updateStateFromDatabase = (data)=>{\r\n    setUserIsPlayerOne(user.uid === data.playerOne);\r\n    setFirstPlayersTurn(data.playerOnesTurn);\r\n    setBoard(data.board);\r\n //   console.log(data.history);\r\n    setInitialLoad(false);\r\n    setHistory(data.history);\r\n    setCurrentHistoryIndex(data.history.length -1);\r\n    console.log(data.history[data.history.length -1].multijumpOptions);\r\n    setAllowedMultiJumps(data.history[data.history.length -1].multijumpOptions);\r\n    setGameOver({gameOver: data.gameOver, winner: data.winner, winnerDisplayName : data.winner ? data.winner === data.playerOne ? data.playerOneDisplayName : data.playerTwoDisplayName : null});\r\n    setCurrentUsersTurn((data.playerOnesTurn && data.playerOne === user.uid) ||(!data.playerOnesTurn && data.playerTwo === user.uid));\r\n    setGameInfoFromDatabase(data);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   const refreshGameData = async(dbId = id)=>{\r\n    //  console.log(history);\r\n     if(! dbId) return;\r\n     if(gameOver.gameOver) return;\r\n     let res = await apiCalls.getGameById(dbId);\r\n     if(!res.status === 200) return;\r\n     let updatedGame = await res.data;\r\n   //  console.log(updatedGame);\r\n  //   console.log(updatedGame.history.length, history.length);\r\n     if(updatedGame.history.length <= history.length && initialLoad === false && updatedGame.gameOver === false )return;\r\n    updateStateFromDatabase(updatedGame);\r\n   }\r\n\r\n \r\n    const attemptMove = async(num, origin, playerOnesPiece) => {\r\n      // console.log(history);\r\n      if(!currentUsersTurn){\r\n        console.log('not current users turn');\r\n        return;\r\n      } \r\n      if(gameInfoFromDatabase.gameOver || gameOver.gameOver) return;\r\n        num = parseInt(num, 10);\r\n        origin = parseInt(origin, 10);\r\n  //      console.log(`goal: ${num} origin: ${origin}`);\r\n        // console.log(history);\r\n        if (num === origin || !num) return;\r\n        if ((playerOnesPiece === 'black' && ! userIsPlayerOne) || (playerOnesPiece === 'red' && userIsPlayerOne)) return;\r\n        if (board[num].hasPiece === true) return;\r\n        console.log(allowedMultiJumps);\r\n        if (allowedMultiJumps != undefined && allowedMultiJumps.length && !allowedMultiJumps.includes(parseInt(num, 10))) return;\r\n        if (currentHistoryIndex !== history.length - 1 && history.length > 0) return;\r\n        let res = CalculateLegalMoves(parseInt(num, 10), parseInt(origin, 10), board, firstPlayersTurn);\r\n        if (!res.valid) return;\r\n        if (res.multiJump) {\r\n          setAllowedMultiJumps(res.multiJumpOptions);\r\n        } else {\r\n          setFirstPlayersTurn(!firstPlayersTurn);\r\n          setAllowedMultiJumps([]);\r\n        }\r\n        const newBoard = board.map((item, index) => index == num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index == origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump === true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item);\r\n        //hook into db before updating state, that way client-side board only updates after database updates.\r\n        setBoard(newBoard);\r\n    \r\n        setHistory([...history, { board:newBoard, historyIndex: currentHistoryIndex + 1 }]);\r\n        setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n        let gameStatusCheck = CalculateGameStatus(newBoard, !firstPlayersTurn);\r\n        if (gameStatusCheck.gameOver === true) {\r\n          setGameOver(gameStatusCheck);\r\n        }\r\n        const gameUpdate = await apiCalls.updateGame({id: id,playerOne: gameInfoFromDatabase.playerOne, playerTwo: gameInfoFromDatabase.playerTwo, playerOneDisplayName: gameInfoFromDatabase.playerOneDisplayName, playerTwoDisplayName: gameInfoFromDatabase.playerTwoDisplayName,  playerOnesTurn : res.multiJump ? gameInfoFromDatabase.playerOnesTurn : !gameInfoFromDatabase.playerOnesTurn, board: newBoard, history: [...gameInfoFromDatabase.history,{board: newBoard, historyIndex: gameInfoFromDatabase.history.length, multijumpOptions: res.multiJump ? res.multiJumpOptions : []} ], gameOver: gameStatusCheck.gameOver,winner: gameStatusCheck.gameOver ? user.uid : null });\r\n        console.log(gameUpdate);\r\n        setCurrentUsersTurn(res.multiJump);\r\n      }\r\n      const traverseHistory = (direction) => {\r\n        if (history.length === 1) return;\r\n        if (direction === 'left' && currentHistoryIndex > 0) {\r\n          setBoard(history[currentHistoryIndex - 1].board);\r\n          setCurrentHistoryIndex(currentHistoryIndex - 1);\r\n    \r\n        }\r\n        if (direction === 'present') {\r\n          setCurrentHistoryIndex(history.length - 1);\r\n          setBoard(history[history.length - 1].board);\r\n        }\r\n        if (direction === 'right' && currentHistoryIndex < history.length - 1) {\r\n          setBoard(history[currentHistoryIndex + 1].board);\r\n          setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n        }\r\n    \r\n        if (direction === 'beginning') {\r\n          setBoard(history[0].board);\r\n          setCurrentHistoryIndex(0);\r\n        }\r\n      }\r\n      const resign = async()=>{\r\n        console.log('resign')\r\n        if(!id) return;\r\n        if(gameOver.gameOver) return;\r\n        let resignGame =  await apiCalls.updateGame({...gameInfoFromDatabase, gameOver: true, winner: user.uid == gameInfoFromDatabase.playerOne ? gameInfoFromDatabase.playerTwo : gameInfoFromDatabase.playerOne });\r\n        console.log(resignGame);\r\n        if(resignGame.status === 200) setGameOver({gameOver: true, winner: user.uid ===gameInfoFromDatabase.playerOne ? gameInfoFromDatabase.playerTwo : gameInfoFromDatabase.playerOne,  winnerDisplayName : gameInfoFromDatabase.playerOne === user.uid ? gameInfoFromDatabase.playerTwoDisplayName : gameInfoFromDatabase.playerOneDisplayName })\r\n\r\n      }\r\n\r\n  if(!id) return(<div className = 'header'>No multiplayer game has been chosen.</div>)\r\n    return (\r\n        <> \r\n            <h4 className = 'header'>{gameInfoFromDatabase.playerOneDisplayName}{gameInfoFromDatabase.playerOne === user.uid ? '(you)' : ''} vs {gameInfoFromDatabase.playerTwoDisplayName}{gameInfoFromDatabase.playerTwo === user.uid ? '(you)' : ''}</h4>\r\n          <Board boardState={board} setBoard={attemptMove} styleInfo = {{shape: style.shape, boardStyle: style.boardStyle, flipboard: !userIsPlayerOne}} />\r\n          <MultiplayerDashboard resign={resign} viewHistory = {traverseHistory} styleInfo = {style} gameOver = {gameOver} usersTurn = {currentUsersTurn} playerOnesTurn = {gameInfoFromDatabase.playerOnesTurn} />\r\n          <MultiplayerGameEndModal gameOver = {gameOver} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayMultiplayer\r\n","import './App.css';\nimport Board from './components/Board'\nimport { useState, useContext } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport CalculateLegalMoves from './Utils/CalculateLegalMoves';\nimport CalculateGameStatus from './Utils/CalculateGameStatus';\nimport GameEndModal from './components/GameEndModal';\nimport originalBoard from './Utils/OriginalBoard';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport TopNav from './components/TopNav';\nimport Preferences from './components/Preferences';\nimport Rules from './components/Rules';\nimport SignIn from './auth/SignIn';\nimport SignUp from './auth/SignUp';\nimport PasswordReset from './auth/PasswordReset';\nimport UserProvider from './providers/UserProvider';\nimport MultiplayerPage from './components/MultiplayerPage';\n// import {UserContext} from './providers/UserProvider';\nimport {UserContext} from './providers/FunctionalUserProvider';\nimport {auth, generateUserDocument} from './auth/firebase';\nimport PlayMultiplayer from './components/PlayMultiplayer';\n\nfunction App() {\n  const [firstPlayersTurn, setFirstPlayersTurn] = useState(true);\n  const [board, setBoard] = useState(originalBoard);\n  const [history, setHistory] = useState([{ board: board, historyIndex: 0 }]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(0);\n  const [allowedMultiJumps, setAllowedMultiJumps] = useState([]);\n  const [gameOver, setGameOver] = useState({ gameOver: false, winner: null });\n  const [pieceShape, setPieceShape] = useState('circle');\n  const[boardstyle, setBoardstyle] = useState('brown');\n  const[flipBoard, setFlipBoard] = useState(false);\n  const attemptMove = (num, origin, playerOnesPiece) => {\n    num = parseInt(num, 10);\n    origin = parseInt(origin, 10);\n    if (num === origin || !num) return;\n    if ((playerOnesPiece === 'black' && firstPlayersTurn === false) || (playerOnesPiece === 'red' && firstPlayersTurn === true)) return;\n    if (board[num].hasPiece === true) return;\n    if (allowedMultiJumps.length > 0 && !allowedMultiJumps.includes(parseInt(num, 10))) return;\n    if (currentHistoryIndex !== history.length - 1 && history.length > 0) return;\n    let res = CalculateLegalMoves(parseInt(num, 10), parseInt(origin, 10), board, firstPlayersTurn);\n    if (!res.valid) return;\n    if (res.multiJump) {\n      setAllowedMultiJumps(res.multiJumpOptions);\n    } else {\n      setFirstPlayersTurn(!firstPlayersTurn);\n      setAllowedMultiJumps([]);\n    }\n    const newBoard = board.map((item, index) => index == num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index == origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump === true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item);\n    setBoard(newBoard);\n\n    setHistory([...history, { board:newBoard, historyIndex: currentHistoryIndex + 1 }]);\n    setCurrentHistoryIndex(currentHistoryIndex + 1);\n    let gameStatusCheck = CalculateGameStatus(newBoard, !firstPlayersTurn);\n    if (gameStatusCheck.gameOver === true) {\n      setGameOver(gameStatusCheck);\n    }\n\n  }\n  const traverseHistory = (direction) => {\n    if (history.length === 1) return;\n    if (direction === 'left' && currentHistoryIndex > 0) {\n      setBoard(history[currentHistoryIndex - 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n\n    }\n    if (direction === 'present') {\n      setCurrentHistoryIndex(history.length - 1);\n      setBoard(history[history.length - 1].board);\n    }\n    if (direction === 'right' && currentHistoryIndex < history.length - 1) {\n      setBoard(history[currentHistoryIndex + 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n    }\n\n    if (direction === 'beginning') {\n      setBoard(history[0].board);\n      setCurrentHistoryIndex(0);\n    }\n  }\n  const resetGame = ()=>{\n    setFirstPlayersTurn(true);\n    setBoard(originalBoard);\n    setHistory([{ board: originalBoard, historyIndex: 0 }]);\n    setCurrentHistoryIndex(0);\n    setAllowedMultiJumps([]);\n    setGameOver({ gameOver: false, winner: null });\n    let hideModal = document.getElementsByClassName('end-modal')[0];\n    hideModal.style.visibility = 'visible';\n  }\nconst changeShape = (target)=>{\n  setPieceShape(target);\n}\nconst changeBoardStyle = (target)=>{\n  setBoardstyle(target);\n}\nconst rotateBoard = ()=>{\n  setFlipBoard(!flipBoard);\n}\n//authentication\nconst [user, setUser] = useState(null);\nauth.onAuthStateChanged(async userAuth=>{\n  const user = await generateUserDocument(userAuth);\n  // console.log(user);\n  setUser(userAuth);\n})\n  return ( user == null ?\n    <UserContext.Provider value={user}>\n  <Router>\n    <Route path='/' exact component = {SignIn}/>\n    <Route path='/signUp' component = {SignUp}/>\n    <Route path='/passwordReset' component = {PasswordReset}/>\n\n  </Router>\n  </UserContext.Provider >\n  :\n  <UserContext.Provider value={user}>\n    <Router>\n      <div className=\"App\">\n        <TopNav/>\n      <Route path='/' exact render={(props)=>(\n      <>\n           <Board boardState={board} setBoard={attemptMove} styleInfo = {{shape: pieceShape, boardStyle: boardstyle, flipboard: flipBoard}} />\n      <Dashboard styleInfo = {{shape: pieceShape, boardStyle: boardstyle, flipboard: flipBoard}}  resetGame = {resetGame} player={firstPlayersTurn} gameOver={gameOver.gameOver} viewHistory={traverseHistory} rotateBoard = {rotateBoard} />\n      <GameEndModal resetGame = {resetGame} gameOver={gameOver} />\n      \n      </>)}/>\n    <Route path ='/about' component = {About}/> \n    <Route path='/preferences' render = {(props)=>(\n      <Preferences changeBoardstyle = {changeBoardStyle} changeShape = {changeShape} style = {{shape: pieceShape, boardStyle: boardstyle}}/>\n    )}/>\n    <Route path='/rules' component = {Rules}></Route>\n    <Route path = '/multiplayer' render = {(props)=>(\n      <MultiplayerPage user = {user}/>\n    )}/>\n        <Route path = '/play-multiplayer/:id' render = {(props)=>(\n      <PlayMultiplayer style ={{shape: pieceShape, boardStyle: boardstyle}} user={user}/>\n    )}/>\n\n      <Footer />\n    </div>\n    </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}