{"version":3,"sources":["components/TokenPiece.js","components/Square.js","components/Board.js","components/MoveArrows.js","components/PlayAgain.js","components/FlipBoard.js","components/Dashboard.js","Utils/CalculateLegalMoves.js","Utils/CalculateGameStatus.js","components/GameEndModal.js","Utils/OriginalBoard.js","components/Footer.js","components/About.js","images/checkers_piece_icon.PNG","auth/firebase.js","components/TopNav.js","components/Preferences.js","components/Rules.js","auth/SignIn.js","auth/SignUp.js","auth/PasswordReset.js","Utils/apiCalls.js","components/NewGameDashboard.js","components/GameCreateJoinModal.js","components/UserSeekPreview.js","components/UserSeeksDashboard.js","components/HideableTextInput.js","components/OtherSeekPreview.js","components/OtherSeeksDashboard.js","components/TogglingButton.js","components/CurrentGamePreview.js","components/GamesInProgress.js","components/PastGamesPreview.js","components/PreviousGamesDashboard.js","components/MultiplayerPage.js","components/Resign.js","components/MultiplayerDashboard.js","components/MultiplayerGameEndModal.js","components/PlayMultiplayer.js","App.js","index.js"],"names":["TokenPiece","className","id","pieceColor","pieceIsKing","styleInfo","shape","boardStyle","draggable","onDragStart","event","dataTransfer","setData","drag","width","height","viewBox","d","Square","color","number","populated","setBoard","squareColor","textColor","onDragOver","e","preventDefault","onDrop","target","replace","getData","drop","style","backgroundColor","Board","boardState","flipboard","map","num","index","hasPiece","rowNum","Math","floor","MoveArrows","viewHistory","onClick","aria-hidden","focusable","data-prefix","role","fill","PlayAgain","gameOver","resetGame","FlipBoard","rotateBoard","Dashboard","player","CalculateLegalMoves","goalSquare","startSquare","board","playerOne","valid","jump","jumpedSquare","multiJump","multiJumpOptions","isKing","baseMoveLeft","baseMoveRight","jumpLeft","jumpRight","corners","singleJumpOption","resObject","options","calcSingleJumpOptions","start","baseMove","jumpMove","multi","includes","push","indexOf","CalculateGameStatus","playerOneTurn","winner","forEach","square","moveLeft","moveRight","moveBackLeft","moveBackRight","moveLeftAndRight","GameEndModal","display","document","getElementsByClassName","visibility","originalBoard","Footer","Date","getFullYear","rel","href","About","require","config","console","log","process","FIREBASE_API_KEY","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","TopNav","firestore","signOutAndRedirect","a","window","location","host","signOut","Navbar","bg","expand","Brand","exact","to","src","logo","alt","Toggle","aria-controls","Collapse","Row","Nav","defaultActiveKey","Col","md","Item","Preferences","changeShape","changeBoardstyle","onChange","querySelector","value","defaultChecked","type","name","htmlFor","Rules","SignIn","useState","email","setEmail","password","setPassword","error","setError","onChangeHandler","currentTarget","placeholder","signInWithEmailAndPassword","catch","signInWithEmailAndPasswordHandler","SignUp","displayName","setDisplayName","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","firebaseUser","currentUser","PasswordReset","emailHasBeenSent","setEmailHasBeenSent","action","sendPasswordResetEmail","then","setTimeout","apiCalls","getGameById","gameId","axios","url","headers","method","getGamesInProgress","uid","encodeURI","getOpenGames","getPastGames","createGame","gameData","data","deleteGame","updateGame","game","NewGameDashboard","makeNewGame","hideShowForm","formValidateAndSubmit","formData","FormData","playerChoice","get","alias","length","alert","maxLength","GameCreateJoinModal","hideShow","message","UserSeekPreview","cancel","playerOneDisplayName","playerTwoDisplayName","UserSeeksDashboard","openSeeks","item","HideableTextInput","inputId","updateDisplayName","toString","OtherSeekPreview","joinGame","setDisplay","updateDisplay","OtherSeeksDashboard","TogglingButton","toggleBool","trueString","falseString","toggleFunc","CurrentGamePreview","user","date","updatedAt","dateString","getMonth","getDate","getHours","getMinutes","currentUsersTurn","playerOnesTurn","playerTwo","history","params","pathname","locationInfo","GamesInProgress","games","PastGamesPreview","PreviousGamesDashboard","MultiplayerPage","gameAdded","setGameAdded","toggleForm","setToggleForm","toggleModal","setToggleModal","toggleUserSeeks","setToggleUserSeeks","toggleOtherSeeks","setToggleOtherSeeks","togglePreviousGames","setTogglePreviousGames","userOpenGames","setUserOpenGames","otherOpenGames","setOtherOpenGames","bannerMessage","setBannerMessage","userGamesInProgress","setUserGamesInProgress","refreshBuffer","refreshId","usersPastGames","setUsersPastGames","useEffect","pullAllData","clearInterval","callRefresh","setInterval","gameRefresh","retrieveOpenGames","retrieveCurrentGames","retrievePreviousGames","toggleNewGameDisplay","popup","newGame","historyIndex","currentGames","currentOpenGames","userOpenSeeks","otherOpenSeeks","previousGames","sort","b","reverse","gamesInProgress","removeGame","status","show","Resign","resign","MultiplayerDashboard","usersTurn","winnerDisplayName","MultiplayerGameEndModal","PlayMultiplayer","useParams","userIsPlayerOne","setUserIsPlayerOne","firstPlayersTurn","setFirstPlayersTurn","setHistory","currentHistoryIndex","setCurrentHistoryIndex","allowedMultiJumps","setAllowedMultiJumps","setGameOver","setCurrentUsersTurn","gameInfoFromDatabase","setGameInfoFromDatabase","initialLoad","setInitialLoad","refreshGameData","intervalGameUpdate","updateStateFromDatabase","multijumpOptions","dbId","res","updatedGame","attemptMove","origin","playerOnesPiece","parseInt","undefined","newBoard","gameStatusCheck","direction","App","pieceShape","setPieceShape","boardstyle","setBoardstyle","flipBoard","setFlipBoard","traverseHistory","changeBoardStyle","setUser","onAuthStateChanged","userAuth","path","component","render","props","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ae76ca2.chunk.js","sourcesContent":["const TokenPiece = ({ id, pieceColor, pieceIsKing, styleInfo }) => {\r\n  const drag = (event) => {\r\n    event.dataTransfer.setData(\"text\", id);\r\n    event.dataTransfer.setData(\"color\", pieceColor);\r\n  }\r\n  let className;\r\n  if (pieceColor === 'black') className = 'p1';\r\n  if (pieceColor === 'red') className = 'p2';\r\n  if (pieceIsKing) className += ' king';\r\n  if (styleInfo.shape === 'circle') className += ' piece-circle';\r\n  else if (styleInfo.shape === 'square') className += ' piece-square';\r\n\r\n  className += ' ' + styleInfo.boardStyle;\r\n  return (\r\n    <div className={`piece ${className}`} id={id} draggable=\"true\" onDragStart={(event) => drag(event)} >\r\n      {pieceIsKing && (<svg className='king-icon' width=\"184.099px\" height=\"184.099px\" viewBox=\"0 0 184.099 184.099\">\r\n        <path d=\"M182.23,54.814c-1.675-1.258-3.982-1.245-5.633,0.027l-48.457,36.991L96.337,19.979c-1.504-3.386-7.055-3.386-8.564,0\r\n            l-32.175,72.68L7.563,54.878c-1.659-1.297-3.979-1.333-5.669-0.088c-1.696,1.254-2.338,3.492-1.577,5.443l33.372,86.229\r\n            c0.691,1.803,2.43,2.984,4.357,2.984h108.009c1.942,0,3.666-1.176,4.36-2.984l33.368-86.229\r\n            C184.538,58.282,183.905,56.068,182.23,54.814z M142.852,140.099h-101.6L15.193,72.774l39.357,30.948\r\n            c1.13,0.895,2.606,1.218,4.022,0.853c1.404-0.342,2.564-1.315,3.151-2.643l30.333-68.516l29.928,67.626\r\n            c0.591,1.304,1.729,2.277,3.118,2.631c1.388,0.365,2.861,0.061,4.006-0.816l39.981-30.521L142.852,140.099z M150.244,161.983\r\n            c0,2.582-2.095,4.677-4.677,4.677H38.526c-2.582,0-4.676-2.095-4.676-4.677s2.095-4.677,4.676-4.677h107.041\r\n            C148.155,157.307,150.244,159.401,150.244,161.983z\"/>\r\n      </svg>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TokenPiece\r\n","import Token from './TokenPiece';\r\nconst Square = ({ color, number, populated, setBoard, pieceColor, pieceIsKing, styleInfo }) => {\r\n    function drop(event) {\r\n        setBoard(event.target.id.replace('square', ''), event.dataTransfer.getData('text'), event.dataTransfer.getData('color'));\r\n    }\r\n    const allowDrop = (event) => {\r\n        if (color === 'black') event.preventDefault();\r\n    }\r\n    let squareColor = color === 'black' ? '#954535' : '#d2a56d';\r\n    let textColor = color === 'black' ? 'white' : 'black';\r\n    if (styleInfo.boardStyle === 'bw') squareColor = textColor;\r\n    if (styleInfo.boardStyle === 'green') squareColor = color === 'black' ? '#32612D' : '#5ca08e';\r\n\r\n    return (\r\n        <div id={'square' + number} draggable='false' onDragOver={(e) => allowDrop(e)} onDrop={(event) => drop(event)} className='square' style={{ backgroundColor: squareColor, color: textColor }} >\r\n            {populated ? <Token styleInfo={styleInfo} pieceIsKing={pieceIsKing} pieceColor={pieceColor} id={number} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import Square from './Square';\r\nconst Board = ({boardState, setBoard, styleInfo}) => {\r\n    return (<div className = {`board ${styleInfo.flipboard ? 'rotated' : ''}`}>\r\n                {boardState.map((num, index)=><Square number={num.number} pieceColor = {num.pieceColor} pieceIsKing = {num.pieceIsKing} setBoard = {setBoard} color={num.color} populated = {num.hasPiece} rowNum = { Math.floor(num.number / 8)} styleInfo={styleInfo} key={index} />)}\r\n        </div>\r\n    )\r\n}\r\nexport default Board\r\n","const MoveArrows = ({viewHistory}) => {\r\n    return (\r\n        <span className='move-arrows grid-item'>\r\n            <span onClick={() => viewHistory('beginning')} className='double-arrow-left' ><svg className=\"double-arrow\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" role=\"img\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M34.5 239L228.9 44.7c9.4-9.4 24.6-9.4 33.9 0l22.7 22.7c9.4 9.4 9.4 24.5 0 33.9L131.5 256l154 154.7c9.3 9.4 9.3 24.5 0 33.9l-22.7 22.7c-9.4 9.4-24.6 9.4-33.9 0L34.5 273c-9.3-9.4-9.3-24.6 0-34zm192 34l194.3 194.3c9.4 9.4 24.6 9.4 33.9 0l22.7-22.7c9.4-9.4 9.4-24.5 0-33.9L323.5 256l154-154.7c9.3-9.4 9.3-24.5 0-33.9l-22.7-22.7c-9.4-9.4-24.6-9.4-33.9 0L226.5 239c-9.3 9.4-9.3 24.6 0 34z\"></path></svg></span>\r\n            <span onClick={() => viewHistory('left')} className='chevron left'></span>\r\n            <span onClick={() => viewHistory('right')} className='chevron right'></span>\r\n            <span onClick={() => viewHistory('present')} className='double-arrow-right' ><svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" viewBox=\"0 0 512 512\" className=\"double-arrow\"><path fill=\"currentColor\" d=\"M477.5 273L283.1 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.7-22.7c-9.4-9.4-9.4-24.5 0-33.9l154-154.7-154-154.7c-9.3-9.4-9.3-24.5 0-33.9l22.7-22.7c9.4-9.4 24.6-9.4 33.9 0L477.5 239c9.3 9.4 9.3 24.6 0 34zm-192-34L91.1 44.7c-9.4-9.4-24.6-9.4-33.9 0L34.5 67.4c-9.4 9.4-9.4 24.5 0 33.9l154 154.7-154 154.7c-9.3 9.4-9.3 24.5 0 33.9l22.7 22.7c9.4 9.4 24.6 9.4 33.9 0L285.5 273c9.3-9.4 9.3-24.6 0-34z\" ></path></svg></span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default MoveArrows\r\n","const PlayAgain = ({ gameOver, resetGame }) => {\r\n    return (\r\n        <button onClick={resetGame} className='play-again' >\r\n            {gameOver ? `Play Again` : `Restart Game`}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default PlayAgain\r\n","const FlipBoard = ({ rotateBoard }) => {\r\n    return (\r\n        <span className='board-flip'>\r\n            flip board &nbsp; &nbsp;\r\n            <svg onClick={rotateBoard} className='board-flip-svg'\r\n                viewBox=\"0 0 489.645 489.645\">\r\n                <path d=\"M460.656,132.911c-58.7-122.1-212.2-166.5-331.8-104.1c-9.4,5.2-13.5,16.6-8.3,27c5.2,9.4,16.6,13.5,27,8.3\r\n\t\tc99.9-52,227.4-14.9,276.7,86.3c65.4,134.3-19,236.7-87.4,274.6c-93.1,51.7-211.2,17.4-267.6-70.7l69.3,14.5\r\n\t\tc10.4,2.1,21.8-4.2,23.9-15.6c2.1-10.4-4.2-21.8-15.6-23.9l-122.8-25c-20.6-2-25,16.6-23.9,22.9l15.6,123.8\r\n\t\tc1,10.4,9.4,17.7,19.8,17.7c12.8,0,20.8-12.5,19.8-23.9l-6-50.5c57.4,70.8,170.3,131.2,307.4,68.2\r\n\t\tC414.856,432.511,548.256,314.811,460.656,132.911z\"/>\r\n            </svg>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default FlipBoard\r\n","import MoveArrows from './MoveArrows'; \r\nimport PlayAgain from './PlayAgain';\r\nimport FlipBoard from './FlipBoard';\r\nconst Dashboard = ({player, viewHistory, gameOver, resetGame, styleInfo, rotateBoard}) => {\r\n    return (\r\n        <div className = 'dashboard'>\r\n           <span className = 'player-info grid-item'>{gameOver ? `Game over! ` : player ? `Player one's turn` : `Player two's turn`} <span className ={player ? 'p1 ex ' + styleInfo.shape +' ' + styleInfo.boardStyle : 'p2 ex '+ styleInfo.shape +' ' + styleInfo.boardStyle} ></span></span> \r\n           <MoveArrows viewHistory = {viewHistory} />\r\n           <PlayAgain resetGame = {resetGame} gameOver = {gameOver}/>\r\n           <FlipBoard rotateBoard = {rotateBoard}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","const CalculateLegalMoves = (goalSquare, startSquare, board, playerOne) => {\r\n    if (!board[startSquare]) return { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions: [], isKing: false };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n    let edges = [1, 3, 5, 7, 56, 58, 60, 62];\r\n    let singleJumpOption = [];\r\n    let jumpedSquare = [];\r\n    let resObject = { valid: false, jump: false, jumpedSquare: null, multiJump: false, multiJumpOptions: [], isKing: board[startSquare].pieceIsKing };\r\n    let baseMoveLeft, baseMoveRight, jumpLeft, jumpRight;\r\n    let options = [];\r\n    if (playerOne) {\r\n        baseMoveLeft = -9\r\n        baseMoveRight = -7;\r\n        jumpLeft = -18;\r\n        jumpRight = -14;\r\n    } else {\r\n        baseMoveLeft = 7;\r\n        baseMoveRight = 9;\r\n        jumpLeft = 14;\r\n        jumpRight = 18;\r\n    }\r\n    const calcSingleJumpOptions = (start, baseMove, jumpMove, player, multi = false) => {\r\n        if (!corners.includes(start + baseMove) && start + baseMove >= 0 && start + baseMove < 64 && board[start + baseMove].hasPiece && ((player && board[start + baseMove].pieceColor === 'red') || (!player && board[start + baseMove].pieceColor === 'black')) && !board[start + jumpMove].hasPiece) {\r\n            if (!multi) {\r\n                singleJumpOption.push(start + jumpMove);\r\n                jumpedSquare.push(start + baseMove);\r\n            } else {\r\n                resObject.multiJump = true;\r\n                resObject.multiJumpOptions.push(start + jumpMove);\r\n            }\r\n        }\r\n    }\r\n    if (startSquare % 8 !== 7) options.push(startSquare + baseMoveRight);\r\n    if (startSquare % 8 !== 0) options.push(startSquare + baseMoveLeft);\r\n    if (resObject.isKing && startSquare % 8 !== 7) options.push(startSquare - baseMoveLeft);\r\n    if (resObject.isKing && startSquare % 8 !== 0) options.push(startSquare - baseMoveRight);\r\n    //jump logic\r\n    calcSingleJumpOptions(startSquare, baseMoveLeft, jumpLeft, playerOne);\r\n    calcSingleJumpOptions(startSquare, baseMoveRight, jumpRight, playerOne);\r\n    if (resObject.isKing) {\r\n        calcSingleJumpOptions(startSquare, -baseMoveRight, -jumpRight, playerOne);\r\n        calcSingleJumpOptions(startSquare, -baseMoveLeft, -jumpLeft, playerOne);\r\n    }\r\n    if (options.includes(goalSquare)) {\r\n        resObject.valid = true;\r\n    } else if (singleJumpOption.includes(goalSquare)) {\r\n        resObject.valid = true;\r\n        resObject.jumpedSquare = jumpedSquare[singleJumpOption.indexOf(goalSquare)];\r\n        resObject.jump = true;\r\n        //calculating multijumps\r\n        if (goalSquare % 8 !== 0)  calcSingleJumpOptions(goalSquare, baseMoveLeft, jumpLeft, playerOne, true);\r\n        if (goalSquare % 8 !== 7)  calcSingleJumpOptions(goalSquare, baseMoveRight, jumpRight, playerOne, true);\r\n        if (resObject.isKing && goalSquare % 8 !== 0)  calcSingleJumpOptions(goalSquare, - baseMoveRight, -jumpRight, playerOne, true);\r\n        if (resObject.isKing && goalSquare % 8 !== 7)  calcSingleJumpOptions(goalSquare, -baseMoveLeft, -jumpLeft, playerOne, true);\r\n    }\r\n    if (resObject.valid && edges.includes(goalSquare) && ((playerOne && goalSquare % 2 === 1) || (!playerOne && goalSquare % 2 === 0))) resObject.isKing = true;\r\n    \r\n    return resObject;\r\n}\r\n\r\nexport default CalculateLegalMoves\r\n","const CalculateGameStatus = (boardState, playerOneTurn) => {\r\n    const resObject = { gameOver: true, winner: playerOneTurn ? 'two' : 'one' };\r\n    let corners = [1, 3, 5, 7, 8, 23, 24, 39, 40, 55, 56, 58, 60, 62];\r\n\r\n    const moveLeftAndRight = (square) => {\r\n        let num = square.number;\r\n        let moveLeft = -9, moveRight = -7, moveBackLeft = 7, moveBackRight = -9;\r\n        if (!playerOneTurn) {\r\n            moveLeft = 7\r\n            moveRight = 9;\r\n            moveBackRight = -7\r\n            moveBackLeft = -9\r\n        }\r\n        //try moving left and right, no jump\r\n        if (num % 8 !== 0 && num + moveLeft >= 0 && num + moveLeft <= 64 && boardState[num + moveLeft].hasPiece === false) return true;\r\n        if (num % 8 !== 7 && num + moveRight >= 0 && num + moveRight <= 64 && boardState[num + moveRight].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 0 && num + moveBackLeft >= 0 && num + moveBackLeft <= 64 && boardState[num + moveBackLeft].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 7 && num + moveBackRight >= 0 && num + moveBackRight <= 64 && boardState[num + moveBackRight].hasPiece === false) return true;\r\n        //try moving left and right via jumping. Ugly, but can clean up later into a code that just takes in parameters of move directions & player\r\n        if (num % 8 !== 0 && num + (moveLeft * 2) >= 0 && num + (moveLeft * 2) <= 64 && !corners.includes(num + moveLeft) && boardState[num + moveLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveLeft].pieceColor === 'black')) && boardState[num + (moveLeft * 2)].hasPiece === false) return true;\r\n        if (num % 8 !== 7 && num + (moveRight * 2) >= 0 && num + (moveRight * 2) <= 64 && !corners.includes(num + moveRight) && boardState[num + moveRight].hasPiece === true && ((playerOneTurn && boardState[num + moveRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveRight].pieceColor === 'black')) && boardState[num + (moveRight * 2)].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 7 && num + (moveBackRight * 2) >= 0 && num + (moveBackRight * 2) <= 64 && !corners.includes(num + moveBackRight) && boardState[num + moveBackRight].hasPiece === true && ((playerOneTurn && boardState[num + moveBackRight].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackRight].pieceColor === 'black')) && boardState[num + (moveBackRight * 2)].hasPiece === false) return true;\r\n        if (square.pieceIsKing && num % 8 !== 0 && num + (moveBackLeft * 2) >= 0 && num + (moveBackLeft * 2) <= 64 && !corners.includes(num + moveBackLeft) && boardState[num + moveBackLeft].hasPiece === true && ((playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'red') || (!playerOneTurn && boardState[num + moveBackLeft].pieceColor === 'black')) && boardState[num + (moveBackLeft * 2)].hasPiece === false) return true;\r\n    }\r\n\r\n\r\n    boardState.forEach(square => {\r\n        if (square.hasPiece && ((playerOneTurn && square.pieceColor === 'black') || (!playerOneTurn && square.pieceColor === 'red'))) {\r\n            let canMove = moveLeftAndRight(square);\r\n            if (canMove) {\r\n                resObject.gameOver = false;\r\n                return resObject\r\n            }\r\n        }\r\n    });\r\n    return resObject;\r\n}\r\n\r\nexport default CalculateGameStatus\r\n","import PlayAgain from './PlayAgain';\r\nconst GameEndModal = ({gameOver, resetGame}) => {\r\n    const close = ()=>{\r\n        let hideModal = document.getElementsByClassName('end-modal')[0];\r\n        hideModal.style.visibility = 'hidden';\r\n    }\r\n\r\n    let display = gameOver.gameOver ? 'flex' : 'none';\r\n    return (\r\n        <div className = 'end-modal' style={{display: display}}>\r\n            <span onClick = {close} className = 'close-modal'>X</span>\r\n           <p>Player {gameOver.winner} has won!</p>\r\n           <PlayAgain resetGame={resetGame} gameOver = {gameOver.gameOver}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameEndModal\r\n","const originalBoard = [{ number: 0, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 1, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 2, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 3, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 4, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 5, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 6, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 7, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 8, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 9, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 10, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 11, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 12, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 13, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 14, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 15, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 16, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 17, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 18, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 19, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 20, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 21, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 22, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 23, hasPiece: true, color:'black', pieceColor: 'red', pieceIsKing: false },\r\n    { number: 24, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 25, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 26, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 27, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 28, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 29, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 30, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 31, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 32, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 33, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 34, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 35, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 36, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 37, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 38, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 39, hasPiece: false, color:'black', pieceColor: null, pieceIsKing: false },\r\n    { number: 40, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 41, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 42, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 43, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 44, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 45, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 46, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 47, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 48, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 49, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 50, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 51, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 52, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 53, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 54, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 55, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 56, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 57, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 58, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 59, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 60, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 61, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false },\r\n    { number: 62, hasPiece: true, color:'black', pieceColor: 'black', pieceIsKing: false },\r\n    { number: 63, hasPiece: false, color: 'white', pieceColor: null, pieceIsKing: false }];\r\nexport default originalBoard\r\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p> &copy; {new Date().getFullYear()}, <a target = '_blank' rel='noreferrer'  href='https://mattdwinell.github.io'>Matthew Dwinell</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","const About = () => {\r\n    return (\r\n        <div className = 'about'>\r\n            <p> &nbsp;&nbsp;&nbsp;&nbsp;I hope this version of checkers amused you— there are a lot of checkers apps out there, and I wanted to put my own spin on the ruleset. When I was a kid, I was told that you didn’t have to jump a piece if you didn’t want to, but if you did a single-jump, you were obligated to double (or triple) jump if it was possible. Sure, it <i>might</i> have been a forgiving way to play, but it also allows an opponent to set up traps where a king has to double jump and be subsequently taken. Happy playing!</p>\r\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;This checkers app was created as a solo project by me, Matthew Dwinell. I built the clientside SPA in react using functional components and effect/state hooks. I used  Node, Express, Sequelize, Firebase, and a good chunk of spare time for the server-side architecture. For more information about projects I’ve worked on, feel free to check out my <a href='https://mattdwinell.github.io' rel='noreferrer' target='_blank'>web portfolio</a>.</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","export default __webpack_public_path__ + \"static/media/checkers_piece_icon.4d65ed96.PNG\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst dotenv = require('dotenv');\r\ndotenv.config();\r\nconsole.log(process.env.FIREBASE_API_KEY);\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBa6KoxDdgymaNzD822dqL4gNGdKw_K0fU\",\r\n    authDomain: \"full-stack-checkers.firebaseapp.com\",\r\n    projectId: \"full-stack-checkers\",\r\n    storageBucket: \"full-stack-checkers.appspot.com\",\r\n    messagingSenderId: \"497212367040\",\r\n    appId: \"1:497212367040:web:2bb3e2824ad3f795ff8d25\"\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const  signInWithGoogle = ()=>{\r\n    auth.signInWithPopup(provider);\r\n}\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const generateUserDocument = async (user, additionalData) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n      const { email, displayName, photoURL } = user;\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          photoURL,\r\n          ...additionalData\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating user document\", error);\r\n      }\r\n    }\r\n    return getUserDocument(user.uid);\r\n  };\r\n  const getUserDocument = async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n      const userDocument = await firestore.doc(`users/${uid}`).get();\r\n      return {\r\n        uid,\r\n        ...userDocument.data()\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching user\", error);\r\n    }\r\n  };","import { Navbar, Nav, Col, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from './../images/checkers_piece_icon.PNG';\r\nimport { auth } from './../auth/firebase';\r\nconst TopNav = () => {\r\n  const signOutAndRedirect = async () => {\r\n    window.location.href = window.location.host;\r\n    await auth.signOut();\r\n  }\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"sm\" className='style-nav-bar' >\r\n\r\n      <Navbar.Brand>\r\n        <Link exact={true} to='/'><div className='logo-holder'> <img src={logo} alt='checkers logo' /></div></Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Row>\r\n          <Nav defaultActiveKey='/' className=\"mr-auto\">\r\n            <Col md={3}>\r\n              <Nav.Item>\r\n                <Link className='top-nav-link' to='/multiplayer'>Multiplayer</Link>\r\n              </Nav.Item>\r\n            </Col>\r\n            <Col md={3}><Nav.Item>\r\n              <Link className='top-nav-link' to='/' >Solo Play</Link>\r\n            </Nav.Item>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Nav.Item>\r\n                <Link className='top-nav-link' to='/preferences'>Preferences</Link>\r\n              </Nav.Item>\r\n            </Col>\r\n            <Col md={3}><Nav.Item>\r\n              <Link className='top-nav-link' to='/rules' >Rules</Link>\r\n            </Nav.Item>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Nav.Item>\r\n                <Link className='top-nav-link' to='/about'>About</Link>\r\n              </Nav.Item>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Nav.Item>\r\n                <Link to='/'> <button onClick={signOutAndRedirect}> Sign out</button>  </Link>\r\n              </Nav.Item>\r\n            </Col>\r\n          </Nav>\r\n        </Row>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default TopNav\r\n","const Preferences = ({ changeShape, style, changeBoardstyle }) => {\r\n    return (\r\n        <div className='preferences-page'>\r\n            <h4>Customize Board</h4>\r\n            <div className='radio-control'>\r\n                Piece shape\r\n            <div>\r\n                    <input onChange={() => changeShape(document.querySelector('input[name=\"shape\"]:checked').value)} defaultChecked={style.shape === 'circle'} type='radio' value='circle' name='shape' />\r\n                    <label htmlFor='circle'> &nbsp;Round</label>\r\n                </div>\r\n                <div>\r\n                    <input onChange={() => changeShape(document.querySelector('input[name=\"shape\"]:checked').value)} defaultChecked={style.shape === 'square'} name='shape' value='square' type='radio' />\r\n                    <label htmlFor='square'> &nbsp;Square</label>\r\n                </div>\r\n            </div>\r\n            <div className='radio-control'>\r\n                Board Color\r\n            <div>\r\n                    <input onChange={() => changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)} defaultChecked={style.boardStyle === 'brown'} type='radio' value='brown' name='boardstyle' />\r\n                    <label htmlFor='circle'> &nbsp;Brown and Tan</label>\r\n                </div>\r\n                <div>\r\n                    <input onChange={() => changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)} name='boardstyle' value='bw' type='radio' defaultChecked={style.boardStyle === 'bw'} />\r\n                    <label htmlFor='square'> &nbsp;Black and White</label>\r\n                </div>\r\n                <div>\r\n                    <input onChange={() => changeBoardstyle(document.querySelector('input[name=\"boardstyle\"]:checked').value)} name='boardstyle' value='green' type='radio' defaultChecked={style.boardStyle === 'green'} />\r\n                    <label htmlFor='square'> &nbsp;Shades of Green</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preferences\r\n","const Rules = () => {\r\n    return (\r\n        <div className = 'rules'>\r\n            <h5>General rules</h5>\r\n            <p>Your goal is to remove all of the opponent's pieces by capturing them or forcing them into a position where they cannot move.</p>\r\n            <p>Any piece can move diagonally forward, only kings can move diagonally backwards.</p>\r\n            <p>A simple checkers move would be moving your piece diagonally forward one square.</p>\r\n            <p>Jumping requires that the nearest diagonal square be occupied by the opponent's piece, and that the subsequent square after that piece is unoccupied.</p>\r\n            <p>When you jump you capture the opponent's piece, removing it from the board.</p>\r\n            <p> For single jumps, jumping is not required.</p>\r\n            <p> If one of your pieces reaches the back-rank of the other side of the board, it becomes a king and can move backwards as well as forwards.</p>\r\n            <h5>House rule</h5>\r\n                <p>While single jumps are not mandatory, if you jump and have the option to double jump, you must take it.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules\r\n","import {useState} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { signInWithGoogle, auth } from \"./firebase\";\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n      event.preventDefault();\r\n      auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n        setError(\"Error signing in with password and email!\");\r\n        console.error(\"Error signing in with password and email\", error);\r\n      });\r\n    };\r\n\r\n      const onChangeHandler = (event) => {\r\n          const {name, value} = event.currentTarget;\r\n\r\n          if(name === 'userEmail') {\r\n              setEmail(value);\r\n          }\r\n          else if(name === 'userPassword'){\r\n            setPassword(value);\r\n          }\r\n      };\r\n\r\n  return (\r\n    <div className=\"mt-8 login-page\">\r\n      <h1 className=\"bg-header text-center font-bold\">Sign In- Multiplayer Checkers</h1>\r\n      <div className=\"login-form\">\r\n        {error !== null && <div className = \"py-4 bg-red-600 w-full text-white text-center mb-3\">{error}</div>}\r\n        <form className=\"inner-login-form\">\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n           &nbsp;&nbsp; Email:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value = {email}\r\n            placeholder=\"E.g: abcd123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            &nbsp; &nbsp; Password:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value = {password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange = {(event) => onChangeHandler(event)}\r\n          /> &nbsp;\r\n          <button className=\"login-button\" onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}}>\r\n            Sign in\r\n          </button>\r\n        </form>\r\n        <p className=\"text-center inner-login-form\">or</p>\r\n        <button\r\n          className=\"login-button\" onClick = {signInWithGoogle}>\r\n          Sign in with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Don't have an account?{\" \"}\r\n          <Link to=\"signUp\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign up here\r\n          </Link>{\" \"}\r\n          <br />{\" \"}\r\n          <Link to = \"passwordReset\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Forgot Password?\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signInWithGoogle, auth } from \"./firebase\";\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\r\n    try {\r\n      \r\n      await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n\r\n      const firebaseUser = auth.auth().currentUser;\r\n      console.log(firebaseUser);\r\n    }\r\n    catch (error) {\r\n      setError('Error Signing up with email and password');\r\n    }\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setDisplayName(\"\");\r\n  };\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    } else if (name === \"userPassword\") {\r\n      setPassword(value);\r\n    } else if (name === \"displayName\") {\r\n      setDisplayName(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-8 login-page\">\r\n      <h1 className=\"bg-header text-center font-bold\">Sign Up-Multiplayer Checkers</h1>\r\n      <div className=\"login-form\">\r\n        {error !== null && (\r\n          <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        <form className=\"\">\r\n          <label htmlFor=\"displayName\" className=\"block\">\r\n            Display Name: &nbsp;\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-1 p-1 w-full \"\r\n            name=\"displayName\"\r\n            value={displayName}\r\n            placeholder=\"E.g: Faruq\"\r\n            id=\"displayName\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <label htmlFor=\"userEmail\" className=\"block\">\r\n            &nbsp;&nbsp;  Email:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-1 p-1 w-full\"\r\n            name=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"E.g: faruq123@gmail.com\"\r\n            id=\"userEmail\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"userPassword\" className=\"block\">\r\n            Password:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"mt-1 mb-3 p-1 w-full\"\r\n            name=\"userPassword\"\r\n            value={password}\r\n            placeholder=\"Your Password\"\r\n            id=\"userPassword\"\r\n            onChange={event => onChangeHandler(event)}\r\n          />&nbsp;\r\n         <Link to='/'><button\r\n            className=\"login-button\"\r\n            onClick={event => {\r\n              createUserWithEmailAndPasswordHandler(event, email, password);\r\n            }}\r\n          >\r\n            Sign up\r\n          </button>\r\n          </Link> \r\n        </form>\r\n        <p className=\"text-center\">or</p>\r\n        <button\r\n          className=\"login-button\" onClick={signInWithGoogle}\r\n        >\r\n          Sign In with Google\r\n        </button>\r\n        <p className=\"text-center my-3\">\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n            Sign in here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUp;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {auth} from './firebase';\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    if (name === \"userEmail\") {\r\n      setEmail(value);\r\n    }\r\n  };\r\n  const sendResetEmail = event => {\r\n    event.preventDefault();\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        setEmailHasBeenSent(true);\r\n        setTimeout(() => {setEmailHasBeenSent(false)}, 3000);\r\n      })\r\n      .catch(() => {\r\n        setError(\"Error resetting password\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"mt-8 login-page\">\r\n      <h1 className=\"bg-header text-center font-bold\">\r\n        Reset your Password\r\n      </h1>\r\n      <div className=\"login-form\">\r\n        <form className = 'inner-login-form' action=\"\">\r\n          {emailHasBeenSent && (\r\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\r\n              An email has been sent to you!\r\n            </div>\r\n          )}\r\n          {error !== null && (\r\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\r\n            Email:&nbsp;\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"userEmail\"\r\n            id=\"userEmail\"\r\n            value={email}\r\n            placeholder=\"Input your email\"\r\n            onChange={onChangeHandler}\r\n            className=\"mb-3 w-full px-1 py-2\"\r\n          />&nbsp;&nbsp;\r\n          <button onClick = {sendResetEmail}\r\n            className=\"login-button\"\r\n          >\r\n            Send me a reset link\r\n          </button>\r\n        </form>\r\n        <Link\r\n         to =\"/\"\r\n          className=\"text-blue-700 hover:text-blue-800 text-center \"\r\n        >\r\n          &larr; back to sign in page\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PasswordReset;","import axios from 'axios';\r\nconst apiCalls ={\r\n    getGameById: function(gameId){\r\n        return axios({\r\n            url:'/api/games/find-one/'+ gameId,\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        });\r\n    },\r\n    getGamesInProgress: function(uid){\r\n        return axios({\r\n            url:'/api/games/'+ encodeURI(uid),\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        });\r\n    },\r\n    getOpenGames: function(uid){\r\n        return axios({\r\n            url: '/api/games/open/' + encodeURI(uid),\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        })\r\n    },\r\n    getPastGames: function(uid){\r\n        return axios({\r\n            url: '/api/games/past/' + encodeURI(uid),\r\n            headers: {'Access-Control-Allow-Origin' : '*',\r\n            'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'get'\r\n        })\r\n    },\r\n    createGame: function(gameData){\r\n        return axios({\r\n            url:'/api/games',\r\n            headers:{'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'post',\r\n            data: gameData\r\n        });\r\n    },\r\n    deleteGame: function(id){\r\n        return axios({\r\n            url: '/api/games/' + id,\r\n            headers:{'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'delete'\r\n        })\r\n    },\r\n    updateGame: function(game){\r\n        return axios({\r\n            url:'/api/games/' + game.id,\r\n            headers:{'Access-Control-Allow-Origin' : '*', 'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,OPTIONS'},\r\n            method: 'put',\r\n            data: game\r\n        })\r\n    }\r\n}\r\nexport default apiCalls;","const NewGameDashboard = ({display, makeNewGame, hideShowForm}) => {\r\n    const formValidateAndSubmit = async(e)=>{\r\n        e.preventDefault();\r\n        let formData =  new FormData(document.querySelector('#newGameForm'));\r\n        let playerChoice = formData.get('player');\r\n        let alias = formData.get('alias');\r\n        if(! playerChoice || ! alias || ! alias.length > 0){\r\n            alert('please input a display name for this game');\r\n        }else{\r\n            let createdGame = await makeNewGame(playerChoice, alias);\r\n            if(createdGame){\r\n                hideShowForm('popup');\r\n            }\r\n        }\r\n    }\r\n    return display &&(\r\n        <div className = 'new-game-dashboard'> \r\n            <form id='newGameForm' name='newGameForm' className='new-game-form'>\r\n              <h6>I would like to go...</h6>\r\n              <div className='new-game-form-input'>  <input type=\"radio\" name=\"player\" value=\"p1\" defaultChecked='true'></input><label htmlFor='p1'> First</label></div>\r\n              <div className='new-game-form-input'> <input type=\"radio\" name=\"player\" value=\"p2\"></input><label htmlFor='p1'> Second</label></div>\r\n              <h6>Choose your display name for this game:</h6>\r\n              <div className = 'new-game-form-input'><input maxLength='16' type='text' placeholder='e.g. checkersfiend' name='alias' ></input>&nbsp;&nbsp;\r\n              <button onClick = {(e)=>formValidateAndSubmit(e)}>create new game</button>\r\n              </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewGameDashboard\r\n","const GameCreateJoinModal = ({hideShow, display, message}) => {\r\n    return display&& (\r\n        <div className = 'banner-modal' onClick={hideShow}>\r\n          {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameCreateJoinModal\r\n","const UserSeekPreview = ({game, cancel}) => {\r\n    return (\r\n        <tr className='seek-preview'>\r\n           <td className = {game.playerOneDisplayName ? 'tan-highlight' : ''}>{game.playerOneDisplayName || 'Waiting...'}</td><td className = {game.playerTwoDisplayName ? 'tan-highlight' : ''}>{game.playerTwoDisplayName || 'Waiting...'}</td><td ><span onClick = {()=>cancel(game.id)} className='delete-request'>X</span></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserSeekPreview\r\n","import UserSeekPreview from './UserSeekPreview';\r\nconst UserSeeksDashboard = ({ display, openSeeks, cancel }) => {\r\n    return display && (\r\n        <table className='preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Player One</th>\r\n                    <th>Player Two</th>\r\n                    <th>Remove</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {openSeeks.map((item, index) => <UserSeekPreview cancel={cancel} game={item} key={index} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserSeeksDashboard\r\n","const HideableTextInput = ({display, inputId, updateDisplayName}) => {\r\n    return display && (\r\n        <>\r\n          <input id={`input-${inputId.toString()}`} onChange={(e)=>updateDisplayName(e.target.value)}  type='text' maxLength='16' placeholder='Display Name'></input> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HideableTextInput\r\n","import HideableTextInput from './HideableTextInput';\r\nimport { useState } from 'react';\r\nconst OtherSeekPreview = ({ game, joinGame }) => {\r\n    const [display, setDisplay] = useState(false);\r\n    const [displayName, setDisplayName] = useState('');\r\n    const updateDisplay = async () => {\r\n        if (!display) {\r\n            setDisplay(true);\r\n        } else if (displayName.length > 0) {\r\n            let join = await joinGame(game, displayName);\r\n            if (join === 'success') {\r\n                setDisplay(false);\r\n            }\r\n        }\r\n    }\r\n    const updateDisplayName = (name) => {\r\n        setDisplayName(name);\r\n    }\r\n    return (\r\n        <tr className='seek-preview'>\r\n            <td className={game.playerOneDisplayName ? 'tan-highlight' : ''}>{game.playerOneDisplayName || 'Waiting...'}</td><td className={game.playerTwoDisplayName ? 'tan-highlight' : ''}>{game.playerTwoDisplayName || 'Waiting...'}</td><td ><HideableTextInput updateDisplayName={updateDisplayName} inputId={game.id} display={display} /><span className='join-new-game' onClick={updateDisplay}>&#10003;</span></td>\r\n        </tr>\r\n\r\n    )\r\n}\r\n\r\nexport default OtherSeekPreview\r\n","import OtherSeekPreview from './OtherSeekPreview';\r\nconst OtherSeeksDashboard = ({ display, openSeeks, joinGame }) => {\r\n    return display && (\r\n        <table className='preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Player One</th><th>Player Two</th><th>Join</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {openSeeks.map((item, index) => <OtherSeekPreview joinGame={joinGame} game={item} key={index} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default OtherSeeksDashboard\r\n","const TogglingButton = ({toggleBool, trueString, falseString, toggleFunc}) => {\r\n    return (\r\n        <div className = 'style-button'>\r\n        <button className = {toggleBool ? `red-background` : ``} onClick = {()=>(toggleFunc(false))}> {toggleBool ? trueString : falseString}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TogglingButton\r\n","import {Link} from 'react-router-dom';\r\nconst CurrentGamePreview = ({game, user}) => {\r\n    let date = new Date(game.updatedAt);\r\n    let dateString = (date.getMonth() +1) + '/' + date.getDate() + '/' + date.getFullYear()+ ',  ' + date.getHours()+ ':' + (date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()) + ' (EDT)' ;\r\n    let currentUsersTurn = (game.playerOnesTurn && user.uid === game.playerOne) || (!game.playerOnesTurn && user.uid === game.playerTwo); \r\n\r\n    return (\r\n        <tr className = {currentUsersTurn? 'preview user-turn' : 'preview opponent-turn'}>\r\n            <td>&nbsp;{game.playerOneDisplayName}{game.playerOne === user.uid ? ' (you)' : ''}</td>\r\n            <td>{game.playerTwoDisplayName}{game.playerTwo === user.uid ? ' (you)' : ''}</td>\r\n            <td>{currentUsersTurn ? 'Your go' : 'their turn'}</td>\r\n            <td>{game.history.length -1}</td>\r\n            <td>{dateString}</td>\r\n            <td><Link to={{ params:{id: game.id} ,pathname:`/play-multiplayer/${game.id}`,locationInfo:{game: game, user: user}}}>\r\n                <button className = 'preview-action-btn'>{currentUsersTurn ? 'play' : 'View Board'}</button></Link></td>    \r\n        </tr>\r\n        \r\n    )\r\n}\r\n\r\nexport default CurrentGamePreview","import CurrentGamePreview from './CurrentGamePreview';\r\nconst GamesInProgress = ({games, user}) => {\r\n    return games.length > 0 &&(\r\n        <>\r\n        <h4 className='progress-header'>Games Currently in Progress</h4>\r\n        <table className = 'preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Player One\r\n                    </th>\r\n                    <th>\r\n                        Player Two\r\n                    </th>\r\n                    <th>\r\n                        Turn\r\n                    </th>\r\n                    <th>Moves Made</th>\r\n                    <th>Time of Last Move/ join</th>\r\n                    <th>Play</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {games.map((item,index)=><CurrentGamePreview user={user} game={item} key={index} />)}\r\n            </tbody>\r\n        </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GamesInProgress\r\n","import { Link } from 'react-router-dom'\r\nconst PastGamesPreview = ({ game, user }) => {\r\n    return (\r\n        <tr className='preview'>\r\n            <td>&nbsp;{game.playerOneDisplayName}{game.playerOne === user.uid ? ' (you)' : ''}</td>\r\n            <td>{game.playerTwoDisplayName}{game.playerTwo === user.uid ? ' (you)' : ''}</td>\r\n            <td>{game.history.length - 1}</td>\r\n            <td>{game.winner === game.playerOne ? game.playerOneDisplayName : game.playerTwoDisplayName}</td>\r\n            <td><Link to={{ params: { id: game.id }, pathname: `/play-multiplayer/${game.id}` }}>\r\n                <button className='preview-action-btn'>View Board</button></Link></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PastGamesPreview\r\n","import PastGamesPreview from './PastGamesPreview';\r\nconst PreviousGamesDashboard = ({ games, display, user }) => {\r\n    return display && (\r\n        <table className='preview-dashboard'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Player One</th><th>Player Two</th><th># of Moves</th><th>Winner</th><th>Board</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {games.map((item, index) => <PastGamesPreview user={user} game={item} key={index} />)}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PreviousGamesDashboard\r\n","import apiCalls from '../Utils/apiCalls';\r\nimport originalBoard from '../Utils/OriginalBoard';\r\nimport { useState, useEffect } from 'react';\r\nimport NewGameDashboard from './NewGameDashboard';\r\nimport GameCreateJoinModal from './GameCreateJoinModal';\r\nimport UserSeeksDashboard from './UserSeeksDashboard';\r\nimport OtherSeeksDashboard from './OtherSeeksDashboard';\r\nimport TogglingButton from './TogglingButton';\r\nimport GamesInProgress from './GamesInProgress';\r\nimport PreviousGamesDashboard from './PreviousGamesDashboard';\r\nconst MultiplayerPage = ({ user }) => {\r\n    const [gameAdded, setGameAdded] = useState(0);\r\n    const [toggleForm, setToggleForm] = useState(false);\r\n    const [toggleModal, setToggleModal] = useState(false);\r\n    const [toggleUserSeeks, setToggleUserSeeks] = useState(false);\r\n    const [toggleOtherSeeks, setToggleOtherSeeks] = useState(false);\r\n    const [togglePreviousGames, setTogglePreviousGames] = useState(false);\r\n    const [userOpenGames, setUserOpenGames] = useState([]);\r\n    const [otherOpenGames, setOtherOpenGames] = useState([]);\r\n    const [bannerMessage, setBannerMessage] = useState('');\r\n    const [userGamesInProgress, setUserGamesInProgress] = useState([]);\r\n    const [refreshBuffer] = useState(true);\r\n    const [refreshId] = useState();\r\n    const [usersPastGames, setUsersPastGames] = useState([]);\r\n    useEffect(async () => {\r\n        await pullAllData();\r\n\r\n    }, [gameAdded])\r\n    useEffect(() => {\r\n        if (!refreshBuffer || refreshId) return () => clearInterval(refreshId);\r\n        let callRefresh = setInterval(gameRefresh, 5000);\r\n        return () => clearInterval(callRefresh);\r\n    }, [])\r\n    const pullAllData = async () => {\r\n        await retrieveOpenGames();\r\n        await retrieveCurrentGames();\r\n        await retrievePreviousGames();\r\n    }\r\n\r\n    const gameRefresh = () => {\r\n        pullAllData();\r\n        console.log('tick');\r\n    }\r\n\r\n\r\n    const toggleNewGameDisplay = (popup = false) => {\r\n        if (popup !== false) {\r\n            setToggleModal('show');\r\n            setBannerMessage('New Game created! Awaiting opponent.');\r\n        }\r\n        setToggleForm(!toggleForm);\r\n    }\r\n    const toggleUserSeeksDisplay = () => {\r\n        setToggleUserSeeks(!toggleUserSeeks);\r\n    }\r\n    const toggleOtherSeeksDisplay = () => {\r\n        setToggleOtherSeeks(!toggleOtherSeeks);\r\n    }\r\n    const togglePreviousGamesDisplay = () => {\r\n        setTogglePreviousGames(!togglePreviousGames);\r\n    }\r\n    const toggleModalDisplay = (show = false) => {\r\n        setToggleModal(show === 'show' ? true : !toggleModal);\r\n    }\r\n    const makeNewGame = async (playerChoice, alias) => {\r\n        const newGame = {\r\n            board: originalBoard,\r\n            history: [{ board: originalBoard, historyIndex: 0 }],\r\n            gameOver: false,\r\n            playerOnesTurn: true\r\n        }\r\n        if (playerChoice === 'p1') {\r\n            newGame.playerOne = user.uid;\r\n            newGame.playerOneDisplayName = alias;\r\n        } else if (playerChoice === 'p2') {\r\n            newGame.playerTwo = user.uid;\r\n            newGame.playerTwoDisplayName = alias;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n        const currentGames = await apiCalls.createGame(newGame);\r\n        setGameAdded(gameAdded + 1);\r\n        return currentGames;\r\n    }\r\n    const retrieveOpenGames = async () => {\r\n        const currentOpenGames = await apiCalls.getOpenGames(user.uid);\r\n        if (currentOpenGames.data != null) {\r\n            const userOpenSeeks = [];\r\n            const otherOpenSeeks = [];\r\n            currentOpenGames.data.map((item, index) => item.playerOne === user.uid || item.playerTwo === user.uid ? userOpenSeeks.push(item) : otherOpenSeeks.push(item));\r\n            setUserOpenGames(userOpenSeeks);\r\n            setOtherOpenGames(otherOpenSeeks);\r\n        }\r\n    }\r\n    const retrievePreviousGames = async () => {\r\n        const previousGames = await apiCalls.getPastGames(user.uid);\r\n        if (previousGames.data) setUsersPastGames(previousGames.data.sort((a, b) => a.updatedAt - b.updatedAt).reverse());\r\n    }\r\n    const retrieveCurrentGames = async () => {\r\n\r\n        const gamesInProgress = await apiCalls.getGamesInProgress(user.uid);\r\n        if (gamesInProgress.data) setUserGamesInProgress(gamesInProgress.data.sort((a, b) => a.history.length - b.history.length).reverse());\r\n    }\r\n\r\n    const removeGame = async (id) => {\r\n        let res = await apiCalls.deleteGame(id);\r\n        if (res.status === '200') setGameAdded(gameAdded + 1);\r\n    }\r\n    const joinGame = async (game, displayName) => {\r\n        if (game.playerOne == null) {\r\n            game.playerOne = user.uid;\r\n            game.playerOneDisplayName = displayName;\r\n        } else if (game.playerTwo == null) {\r\n            game.playerTwo = user.uid;\r\n            game.playerTwoDisplayName = displayName;\r\n        }\r\n        let join = await apiCalls.updateGame(game);\r\n        if (join.status === 200) {\r\n            setGameAdded(gameAdded + 1);\r\n            setBannerMessage(`Succesfully joined game against ${game.playerOneDisplayName !== displayName ? game.playerOneDisplayName : game.playerTwoDisplayName}`);\r\n            setToggleModal(\"show\");\r\n            return 'success';\r\n        }\r\n    }\r\n    return (<>\r\n        <GameCreateJoinModal message={bannerMessage} hideShow={toggleModalDisplay} display={toggleModal} />\r\n        <div className='multiplayer-page'>\r\n            &nbsp;&nbsp;<TogglingButton toggleBool={toggleForm} toggleFunc={toggleNewGameDisplay} trueString='cancel new game' falseString='Start a new game' />\r\n           &nbsp;&nbsp;&nbsp;\r\n           <NewGameDashboard makeNewGame={makeNewGame} hideShowForm={toggleNewGameDisplay} display={toggleForm} />\r\n            <TogglingButton toggleBool={toggleUserSeeks} toggleFunc={toggleUserSeeksDisplay} trueString='Hide your open game requests' falseString='Show your open game requests' />&nbsp;&nbsp;&nbsp;\r\n           <UserSeeksDashboard cancel={removeGame} display={toggleUserSeeks} openSeeks={userOpenGames} /><TogglingButton toggleBool={toggleOtherSeeks} toggleFunc={toggleOtherSeeksDisplay} trueString='Hide these requests' falseString='Game requests from others' />&nbsp;&nbsp;&nbsp;\r\n           <OtherSeeksDashboard joinGame={joinGame} display={toggleOtherSeeks} openSeeks={otherOpenGames} />\r\n            <TogglingButton toggleBool={togglePreviousGames} toggleFunc={togglePreviousGamesDisplay} trueString='Hide previous games' falseString='Show previous games' />\r\n            <PreviousGamesDashboard display={togglePreviousGames} user={user} games={usersPastGames} />\r\n            <GamesInProgress user={user} games={userGamesInProgress} />\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default MultiplayerPage\r\n","const Resign = ({resign, gameOver}) => {\r\n    return !gameOver && (\r\n        <button onClick = {resign} className = 'play-again' >\r\n            Resign\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Resign\r\n","import MoveArrows from './MoveArrows';\r\nimport Resign from './Resign';\r\nconst MultiplayerDashboard = ({usersTurn,playerOnesTurn, styleInfo, gameOver, viewHistory, resign}) => {\r\n    return (\r\n        <div className = 'dashboard'>\r\n                       <span className = 'player-info grid-item'>{gameOver.gameOver ? `${gameOver.winnerDisplayName} won ` : usersTurn ? `Your turn` : `Their turn`} <span style={{visibility : gameOver.gameOver ? 'hidden' : 'visible'}}  className ={playerOnesTurn ? 'p1 ex ' + styleInfo.shape +' ' + styleInfo.boardStyle : 'p2 ex '+ styleInfo.shape +' ' + styleInfo.boardStyle} ></span></span>\r\n                       <MoveArrows viewHistory = {viewHistory} /> \r\n                       <Resign gameOver={gameOver.gameOver} resign={resign} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplayerDashboard\r\n","import {Link} from 'react-router-dom';\r\nconst MultiplayerGameEndModal = ({gameOver}) => {\r\n    const close = ()=>{\r\n        let hideModal = document.getElementsByClassName('end-modal')[0];\r\n        hideModal.style.visibility = 'hidden';\r\n    }\r\n    let display = gameOver.gameOver ? 'flex' : 'none';\r\n    return gameOver.gameOver && (\r\n        <div>\r\n            <div className='end-modal' style={{ display: display }}>\r\n                <span onClick={close} className='close-modal'>X</span>\r\n                <p>{gameOver.winnerDisplayName} has won!</p>\r\n                <Link className='return-link' to='/multiplayer'>Return To Dashboard</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiplayerGameEndModal\r\n","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport Board from './Board';\r\nimport CalculateLegalMoves from './../Utils/CalculateLegalMoves';\r\nimport CalculateGameStatus from './../Utils/CalculateGameStatus';\r\nimport originalBoard from './../Utils/OriginalBoard';\r\nimport apiCalls from './../Utils/apiCalls';\r\nimport MultiplayerDashboard from './MultiplayerDashboard';\r\nimport MultiplayerGameEndModal from './MultiplayerGameEndModal';\r\n\r\nconst PlayMultiplayer = ({ style, user }) => {\r\n  const { id } = useParams();\r\n  const [userIsPlayerOne, setUserIsPlayerOne] = useState(true);\r\n  const [firstPlayersTurn, setFirstPlayersTurn] = useState(true);\r\n  const [board, setBoard] = useState(originalBoard);\r\n  const [history, setHistory] = useState([{ board: originalBoard, historyIndex: 0 }]);\r\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(0);\r\n  const [allowedMultiJumps, setAllowedMultiJumps] = useState([]);\r\n  const [gameOver, setGameOver] = useState({ gameOver: false, winner: null, winnerDisplayName: null });\r\n  const [currentUsersTurn, setCurrentUsersTurn] = useState(false);\r\n  const [gameInfoFromDatabase, setGameInfoFromDatabase] = useState({});\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    refreshGameData(id);\r\n    let intervalGameUpdate = setInterval(refreshGameData, 2000);\r\n    return () => clearInterval(intervalGameUpdate);\r\n  }, [gameInfoFromDatabase]);\r\n  const updateStateFromDatabase = (data) => {\r\n    setUserIsPlayerOne(user.uid === data.playerOne);\r\n    setFirstPlayersTurn(data.playerOnesTurn);\r\n    setBoard(data.board);\r\n    setInitialLoad(false);\r\n    setHistory(data.history);\r\n    setCurrentHistoryIndex(data.history.length - 1);\r\n    setAllowedMultiJumps(data.history[data.history.length - 1].multijumpOptions);\r\n    setGameOver({ gameOver: data.gameOver, winner: data.winner, winnerDisplayName: data.winner ? data.winner === data.playerOne ? data.playerOneDisplayName : data.playerTwoDisplayName : null });\r\n    setCurrentUsersTurn((data.playerOnesTurn && data.playerOne === user.uid) || (!data.playerOnesTurn && data.playerTwo === user.uid));\r\n    setGameInfoFromDatabase(data);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const refreshGameData = async (dbId = id) => {\r\n    if (!dbId) return;\r\n    if (gameOver.gameOver) return;\r\n    let res = await apiCalls.getGameById(dbId);\r\n    if (!res.status === 200) return;\r\n    let updatedGame = await res.data;\r\n    if (updatedGame.history.length <= history.length && initialLoad === false && updatedGame.gameOver === false) return;\r\n    updateStateFromDatabase(updatedGame);\r\n  }\r\n\r\n\r\n  const attemptMove = async (num, origin, playerOnesPiece) => {\r\n    if (!currentUsersTurn) {\r\n      console.log('not current users turn');\r\n      return;\r\n    }\r\n    if (gameInfoFromDatabase.gameOver || gameOver.gameOver) return;\r\n    num = parseInt(num, 10);\r\n    origin = parseInt(origin, 10);\r\n    if (num === origin || !num) return;\r\n    if ((playerOnesPiece === 'black' && !userIsPlayerOne) || (playerOnesPiece === 'red' && userIsPlayerOne)) return;\r\n    if (board[num].hasPiece === true) return;\r\n    if (allowedMultiJumps !== undefined && allowedMultiJumps.length && !allowedMultiJumps.includes(parseInt(num, 10))) return;\r\n    if (currentHistoryIndex !== history.length - 1 && history.length > 0) return;\r\n    let res = CalculateLegalMoves(parseInt(num, 10), parseInt(origin, 10), board, firstPlayersTurn);\r\n    if (!res.valid) return;\r\n    if (res.multiJump) {\r\n      setAllowedMultiJumps(res.multiJumpOptions);\r\n    } else {\r\n      setFirstPlayersTurn(!firstPlayersTurn);\r\n      setAllowedMultiJumps([]);\r\n    }\r\n    const newBoard = board.map((item, index) => index === num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index === origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump === true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item);\r\n\r\n    setBoard(newBoard);\r\n    setHistory([...history, { board: newBoard, historyIndex: currentHistoryIndex + 1 }]);\r\n    setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n    let gameStatusCheck = CalculateGameStatus(newBoard, !firstPlayersTurn);\r\n    if (gameStatusCheck.gameOver === true) setGameOver(gameStatusCheck);\r\n\r\n    const gameUpdate = await apiCalls.updateGame({ id: id, playerOne: gameInfoFromDatabase.playerOne, playerTwo: gameInfoFromDatabase.playerTwo, playerOneDisplayName: gameInfoFromDatabase.playerOneDisplayName, playerTwoDisplayName: gameInfoFromDatabase.playerTwoDisplayName, playerOnesTurn: res.multiJump ? gameInfoFromDatabase.playerOnesTurn : !gameInfoFromDatabase.playerOnesTurn, board: newBoard, history: [...gameInfoFromDatabase.history, { board: newBoard, historyIndex: gameInfoFromDatabase.history.length, multijumpOptions: res.multiJump ? res.multiJumpOptions : [] }], gameOver: gameStatusCheck.gameOver, winner: gameStatusCheck.gameOver ? user.uid : null });\r\n    setCurrentUsersTurn(res.multiJump);\r\n  }\r\n  const traverseHistory = (direction) => {\r\n    if (history.length === 1) return;\r\n    if (direction === 'left' && currentHistoryIndex > 0) {\r\n      setBoard(history[currentHistoryIndex - 1].board);\r\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\r\n    }\r\n    if (direction === 'present') {\r\n      setCurrentHistoryIndex(history.length - 1);\r\n      setBoard(history[history.length - 1].board);\r\n    }\r\n    if (direction === 'right' && currentHistoryIndex < history.length - 1) {\r\n      setBoard(history[currentHistoryIndex + 1].board);\r\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\r\n    }\r\n\r\n    if (direction === 'beginning') {\r\n      setBoard(history[0].board);\r\n      setCurrentHistoryIndex(0);\r\n    }\r\n  }\r\n  const resign = async () => {\r\n    if (!id) return;\r\n    if (gameOver.gameOver) return;\r\n    let resignGame = await apiCalls.updateGame({ ...gameInfoFromDatabase, gameOver: true, winner: user.uid === gameInfoFromDatabase.playerOne ? gameInfoFromDatabase.playerTwo : gameInfoFromDatabase.playerOne });\r\n    if (resignGame.status === 200) setGameOver({ gameOver: true, winner: user.uid === gameInfoFromDatabase.playerOne ? gameInfoFromDatabase.playerTwo : gameInfoFromDatabase.playerOne, winnerDisplayName: gameInfoFromDatabase.playerOne === user.uid ? gameInfoFromDatabase.playerTwoDisplayName : gameInfoFromDatabase.playerOneDisplayName })\r\n  }\r\n\r\n  if (!id) return (<div className='header'>No multiplayer game has been chosen.</div>)\r\n  return (\r\n    <>\r\n      <h4 className='header'>{gameInfoFromDatabase.playerOneDisplayName}{gameInfoFromDatabase.playerOne === user.uid ? '(you)' : ''} vs {gameInfoFromDatabase.playerTwoDisplayName}{gameInfoFromDatabase.playerTwo === user.uid ? '(you)' : ''}</h4>\r\n      <Board boardState={board} setBoard={attemptMove} styleInfo={{ shape: style.shape, boardStyle: style.boardStyle, flipboard: !userIsPlayerOne }} />\r\n      <MultiplayerDashboard resign={resign} viewHistory={traverseHistory} styleInfo={style} gameOver={gameOver} usersTurn={currentUsersTurn} playerOnesTurn={gameInfoFromDatabase.playerOnesTurn} />\r\n      <MultiplayerGameEndModal gameOver={gameOver} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayMultiplayer\r\n","import './App.css';\nimport Board from './components/Board'\nimport { useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport CalculateLegalMoves from './Utils/CalculateLegalMoves';\nimport CalculateGameStatus from './Utils/CalculateGameStatus';\nimport GameEndModal from './components/GameEndModal';\nimport originalBoard from './Utils/OriginalBoard';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport TopNav from './components/TopNav';\nimport Preferences from './components/Preferences';\nimport Rules from './components/Rules';\nimport SignIn from './auth/SignIn';\nimport SignUp from './auth/SignUp';\nimport PasswordReset from './auth/PasswordReset';\nimport MultiplayerPage from './components/MultiplayerPage';\nimport { auth } from './auth/firebase';\nimport PlayMultiplayer from './components/PlayMultiplayer';\n\nfunction App() {\n  const [firstPlayersTurn, setFirstPlayersTurn] = useState(true);\n  const [board, setBoard] = useState(originalBoard);\n  const [history, setHistory] = useState([{ board: board, historyIndex: 0 }]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(0);\n  const [allowedMultiJumps, setAllowedMultiJumps] = useState([]);\n  const [gameOver, setGameOver] = useState({ gameOver: false, winner: null });\n  const [pieceShape, setPieceShape] = useState('circle');\n  const [boardstyle, setBoardstyle] = useState('brown');\n  const [flipBoard, setFlipBoard] = useState(false);\n\n  const attemptMove = (num, origin, playerOnesPiece) => {\n    num = parseInt(num, 10);\n    origin = parseInt(origin, 10);\n    if (num === origin || !num) return;\n    if ((playerOnesPiece === 'black' && firstPlayersTurn === false) || (playerOnesPiece === 'red' && firstPlayersTurn === true)) return;\n    if (board[num].hasPiece === true) return;\n    if (allowedMultiJumps.length > 0 && !allowedMultiJumps.includes(parseInt(num, 10))) return;\n    if (currentHistoryIndex !== history.length - 1 && history.length > 0) return;\n    let res = CalculateLegalMoves(parseInt(num, 10), parseInt(origin, 10), board, firstPlayersTurn);\n    if (!res.valid) return;\n    if (res.multiJump) {\n      setAllowedMultiJumps(res.multiJumpOptions);\n    } else {\n      setFirstPlayersTurn(!firstPlayersTurn);\n      setAllowedMultiJumps([]);\n    }\n    const newBoard = board.map((item, index) => index === num ? { ...item, hasPiece: true, pieceColor: board[origin].pieceColor, pieceIsKing: (res.isKing) } : index === origin ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : (res.jump === true && index === res.jumpedSquare) ? { ...item, hasPiece: false, pieceColor: null, pieceIsKing: false } : item);\n\n    setBoard(newBoard);\n    setHistory([...history, { board: newBoard, historyIndex: currentHistoryIndex + 1 }]);\n    setCurrentHistoryIndex(currentHistoryIndex + 1);\n    let gameStatusCheck = CalculateGameStatus(newBoard, !firstPlayersTurn);\n    if (gameStatusCheck.gameOver === true) setGameOver(gameStatusCheck);\n  }\n\n  const traverseHistory = (direction) => {\n    if (history.length === 1) return;\n    if (direction === 'left' && currentHistoryIndex > 0) {\n      setBoard(history[currentHistoryIndex - 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex - 1);\n    }\n    if (direction === 'present') {\n      setCurrentHistoryIndex(history.length - 1);\n      setBoard(history[history.length - 1].board);\n    }\n    if (direction === 'right' && currentHistoryIndex < history.length - 1) {\n      setBoard(history[currentHistoryIndex + 1].board);\n      setCurrentHistoryIndex(currentHistoryIndex + 1);\n    }\n    if (direction === 'beginning') {\n      setBoard(history[0].board);\n      setCurrentHistoryIndex(0);\n    }\n  }\n\n  const resetGame = () => {\n    setFirstPlayersTurn(true);\n    setBoard(originalBoard);\n    setHistory([{ board: originalBoard, historyIndex: 0 }]);\n    setCurrentHistoryIndex(0);\n    setAllowedMultiJumps([]);\n    setGameOver({ gameOver: false, winner: null });\n    let hideModal = document.getElementsByClassName('end-modal')[0];\n    hideModal.style.visibility = 'visible';\n  }\n  const changeShape = (target) => {\n    setPieceShape(target);\n  }\n  const changeBoardStyle = (target) => {\n    setBoardstyle(target);\n  }\n  const rotateBoard = () => {\n    setFlipBoard(!flipBoard);\n  }\n  //authentication\n  const [user, setUser] = useState(null);\n  auth.onAuthStateChanged(async userAuth => {\n    setUser(userAuth);\n  })\n  return (user == null ?\n\n    <Router>\n      <Route path='/' exact={true} component={SignIn} />\n      <Route path='/signUp' component={SignUp} />\n      <Route path='/passwordReset' component={PasswordReset} />\n\n    </Router>\n\n    :\n\n    <Router>\n      <div className=\"App\">\n        <TopNav />\n        <Route path='/' exact={true} render={(props) => (\n          <>\n            <Board boardState={board} setBoard={attemptMove} styleInfo={{ shape: pieceShape, boardStyle: boardstyle, flipboard: flipBoard }} />\n            <Dashboard styleInfo={{ shape: pieceShape, boardStyle: boardstyle, flipboard: flipBoard }} resetGame={resetGame} player={firstPlayersTurn} gameOver={gameOver.gameOver} viewHistory={traverseHistory} rotateBoard={rotateBoard} />\n            <GameEndModal resetGame={resetGame} gameOver={gameOver} />\n          </>)} />\n        <Route path='/about' component={About} />\n        <Route path='/preferences' render={(props) => (\n          <Preferences changeBoardstyle={changeBoardStyle} changeShape={changeShape} style={{ shape: pieceShape, boardStyle: boardstyle }} />\n        )} />\n        <Route path='/rules' component={Rules}></Route>\n        <Route path='/multiplayer' render={(props) => (\n          <MultiplayerPage user={user} />\n        )} />\n        <Route path='/play-multiplayer/:id' render={(props) => (\n          <PlayMultiplayer style={{ shape: pieceShape, boardStyle: boardstyle }} user={user} />\n        )} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}